// DO NOT EDIT THIS FILE

package cr

// fg: BLACK(is_light: false) bg: BLACK style: nil
func PBlack(txt string) string {
	return P(txt, BLACK, nil)
}

// fg: BLACK(is_light: false) bg: RED style: nil
func PBlackBgRed(txt string) string {
	return P(txt, BLACK, RED.Pointer())
}

// fg: BLACK(is_light: false) bg: GREEN style: nil
func PBlackBgGreen(txt string) string {
	return P(txt, BLACK, GREEN.Pointer())
}

// fg: BLACK(is_light: false) bg: YELLOW style: nil
func PBlackBgYellow(txt string) string {
	return P(txt, BLACK, YELLOW.Pointer())
}

// fg: BLACK(is_light: false) bg: BLUE style: nil
func PBlackBgBlue(txt string) string {
	return P(txt, BLACK, BLUE.Pointer())
}

// fg: BLACK(is_light: false) bg: MAGENTA style: nil
func PBlackBgMagenta(txt string) string {
	return P(txt, BLACK, MAGENTA.Pointer())
}

// fg: BLACK(is_light: false) bg: CYAN style: nil
func PBlackBgCyan(txt string) string {
	return P(txt, BLACK, CYAN.Pointer())
}

// fg: BLACK(is_light: false) bg: WHITE style: nil
func PBlackBgWhite(txt string) string {
	return P(txt, BLACK, WHITE.Pointer())
}

// fg: RED(is_light: false) bg: BLACK style: nil
func PRedBgBlack(txt string) string {
	return P(txt, RED, BLACK.Pointer())
}

// fg: RED(is_light: false) bg: RED style: nil
func PRed(txt string) string {
	return P(txt, RED, nil)
}

// fg: RED(is_light: false) bg: GREEN style: nil
func PRedBgGreen(txt string) string {
	return P(txt, RED, GREEN.Pointer())
}

// fg: RED(is_light: false) bg: YELLOW style: nil
func PRedBgYellow(txt string) string {
	return P(txt, RED, YELLOW.Pointer())
}

// fg: RED(is_light: false) bg: BLUE style: nil
func PRedBgBlue(txt string) string {
	return P(txt, RED, BLUE.Pointer())
}

// fg: RED(is_light: false) bg: MAGENTA style: nil
func PRedBgMagenta(txt string) string {
	return P(txt, RED, MAGENTA.Pointer())
}

// fg: RED(is_light: false) bg: CYAN style: nil
func PRedBgCyan(txt string) string {
	return P(txt, RED, CYAN.Pointer())
}

// fg: RED(is_light: false) bg: WHITE style: nil
func PRedBgWhite(txt string) string {
	return P(txt, RED, WHITE.Pointer())
}

// fg: GREEN(is_light: false) bg: BLACK style: nil
func PGreenBgBlack(txt string) string {
	return P(txt, GREEN, BLACK.Pointer())
}

// fg: GREEN(is_light: false) bg: RED style: nil
func PGreenBgRed(txt string) string {
	return P(txt, GREEN, RED.Pointer())
}

// fg: GREEN(is_light: false) bg: GREEN style: nil
func PGreen(txt string) string {
	return P(txt, GREEN, nil)
}

// fg: GREEN(is_light: false) bg: YELLOW style: nil
func PGreenBgYellow(txt string) string {
	return P(txt, GREEN, YELLOW.Pointer())
}

// fg: GREEN(is_light: false) bg: BLUE style: nil
func PGreenBgBlue(txt string) string {
	return P(txt, GREEN, BLUE.Pointer())
}

// fg: GREEN(is_light: false) bg: MAGENTA style: nil
func PGreenBgMagenta(txt string) string {
	return P(txt, GREEN, MAGENTA.Pointer())
}

// fg: GREEN(is_light: false) bg: CYAN style: nil
func PGreenBgCyan(txt string) string {
	return P(txt, GREEN, CYAN.Pointer())
}

// fg: GREEN(is_light: false) bg: WHITE style: nil
func PGreenBgWhite(txt string) string {
	return P(txt, GREEN, WHITE.Pointer())
}

// fg: YELLOW(is_light: false) bg: BLACK style: nil
func PYellowBgBlack(txt string) string {
	return P(txt, YELLOW, BLACK.Pointer())
}

// fg: YELLOW(is_light: false) bg: RED style: nil
func PYellowBgRed(txt string) string {
	return P(txt, YELLOW, RED.Pointer())
}

// fg: YELLOW(is_light: false) bg: GREEN style: nil
func PYellowBgGreen(txt string) string {
	return P(txt, YELLOW, GREEN.Pointer())
}

// fg: YELLOW(is_light: false) bg: YELLOW style: nil
func PYellow(txt string) string {
	return P(txt, YELLOW, nil)
}

// fg: YELLOW(is_light: false) bg: BLUE style: nil
func PYellowBgBlue(txt string) string {
	return P(txt, YELLOW, BLUE.Pointer())
}

// fg: YELLOW(is_light: false) bg: MAGENTA style: nil
func PYellowBgMagenta(txt string) string {
	return P(txt, YELLOW, MAGENTA.Pointer())
}

// fg: YELLOW(is_light: false) bg: CYAN style: nil
func PYellowBgCyan(txt string) string {
	return P(txt, YELLOW, CYAN.Pointer())
}

// fg: YELLOW(is_light: false) bg: WHITE style: nil
func PYellowBgWhite(txt string) string {
	return P(txt, YELLOW, WHITE.Pointer())
}

// fg: BLUE(is_light: false) bg: BLACK style: nil
func PBlueBgBlack(txt string) string {
	return P(txt, BLUE, BLACK.Pointer())
}

// fg: BLUE(is_light: false) bg: RED style: nil
func PBlueBgRed(txt string) string {
	return P(txt, BLUE, RED.Pointer())
}

// fg: BLUE(is_light: false) bg: GREEN style: nil
func PBlueBgGreen(txt string) string {
	return P(txt, BLUE, GREEN.Pointer())
}

// fg: BLUE(is_light: false) bg: YELLOW style: nil
func PBlueBgYellow(txt string) string {
	return P(txt, BLUE, YELLOW.Pointer())
}

// fg: BLUE(is_light: false) bg: BLUE style: nil
func PBlue(txt string) string {
	return P(txt, BLUE, nil)
}

// fg: BLUE(is_light: false) bg: MAGENTA style: nil
func PBlueBgMagenta(txt string) string {
	return P(txt, BLUE, MAGENTA.Pointer())
}

// fg: BLUE(is_light: false) bg: CYAN style: nil
func PBlueBgCyan(txt string) string {
	return P(txt, BLUE, CYAN.Pointer())
}

// fg: BLUE(is_light: false) bg: WHITE style: nil
func PBlueBgWhite(txt string) string {
	return P(txt, BLUE, WHITE.Pointer())
}

// fg: MAGENTA(is_light: false) bg: BLACK style: nil
func PMagentaBgBlack(txt string) string {
	return P(txt, MAGENTA, BLACK.Pointer())
}

// fg: MAGENTA(is_light: false) bg: RED style: nil
func PMagentaBgRed(txt string) string {
	return P(txt, MAGENTA, RED.Pointer())
}

// fg: MAGENTA(is_light: false) bg: GREEN style: nil
func PMagentaBgGreen(txt string) string {
	return P(txt, MAGENTA, GREEN.Pointer())
}

// fg: MAGENTA(is_light: false) bg: YELLOW style: nil
func PMagentaBgYellow(txt string) string {
	return P(txt, MAGENTA, YELLOW.Pointer())
}

// fg: MAGENTA(is_light: false) bg: BLUE style: nil
func PMagentaBgBlue(txt string) string {
	return P(txt, MAGENTA, BLUE.Pointer())
}

// fg: MAGENTA(is_light: false) bg: MAGENTA style: nil
func PMagenta(txt string) string {
	return P(txt, MAGENTA, nil)
}

// fg: MAGENTA(is_light: false) bg: CYAN style: nil
func PMagentaBgCyan(txt string) string {
	return P(txt, MAGENTA, CYAN.Pointer())
}

// fg: MAGENTA(is_light: false) bg: WHITE style: nil
func PMagentaBgWhite(txt string) string {
	return P(txt, MAGENTA, WHITE.Pointer())
}

// fg: CYAN(is_light: false) bg: BLACK style: nil
func PCyanBgBlack(txt string) string {
	return P(txt, CYAN, BLACK.Pointer())
}

// fg: CYAN(is_light: false) bg: RED style: nil
func PCyanBgRed(txt string) string {
	return P(txt, CYAN, RED.Pointer())
}

// fg: CYAN(is_light: false) bg: GREEN style: nil
func PCyanBgGreen(txt string) string {
	return P(txt, CYAN, GREEN.Pointer())
}

// fg: CYAN(is_light: false) bg: YELLOW style: nil
func PCyanBgYellow(txt string) string {
	return P(txt, CYAN, YELLOW.Pointer())
}

// fg: CYAN(is_light: false) bg: BLUE style: nil
func PCyanBgBlue(txt string) string {
	return P(txt, CYAN, BLUE.Pointer())
}

// fg: CYAN(is_light: false) bg: MAGENTA style: nil
func PCyanBgMagenta(txt string) string {
	return P(txt, CYAN, MAGENTA.Pointer())
}

// fg: CYAN(is_light: false) bg: CYAN style: nil
func PCyan(txt string) string {
	return P(txt, CYAN, nil)
}

// fg: CYAN(is_light: false) bg: WHITE style: nil
func PCyanBgWhite(txt string) string {
	return P(txt, CYAN, WHITE.Pointer())
}

// fg: WHITE(is_light: false) bg: BLACK style: nil
func PWhiteBgBlack(txt string) string {
	return P(txt, WHITE, BLACK.Pointer())
}

// fg: WHITE(is_light: false) bg: RED style: nil
func PWhiteBgRed(txt string) string {
	return P(txt, WHITE, RED.Pointer())
}

// fg: WHITE(is_light: false) bg: GREEN style: nil
func PWhiteBgGreen(txt string) string {
	return P(txt, WHITE, GREEN.Pointer())
}

// fg: WHITE(is_light: false) bg: YELLOW style: nil
func PWhiteBgYellow(txt string) string {
	return P(txt, WHITE, YELLOW.Pointer())
}

// fg: WHITE(is_light: false) bg: BLUE style: nil
func PWhiteBgBlue(txt string) string {
	return P(txt, WHITE, BLUE.Pointer())
}

// fg: WHITE(is_light: false) bg: MAGENTA style: nil
func PWhiteBgMagenta(txt string) string {
	return P(txt, WHITE, MAGENTA.Pointer())
}

// fg: WHITE(is_light: false) bg: CYAN style: nil
func PWhiteBgCyan(txt string) string {
	return P(txt, WHITE, CYAN.Pointer())
}

// fg: WHITE(is_light: false) bg: WHITE style: nil
func PWhite(txt string) string {
	return P(txt, WHITE, nil)
}

// fg: BLACK(is_light: false) bg: BLACK style: BOLD
func PBlackBold(txt string) string {
	return P(txt, BLACK, nil, BOLD)
}

// fg: BLACK(is_light: false) bg: RED style: BOLD
func PBlackBgRedBold(txt string) string {
	return P(txt, BLACK, RED.Pointer(), BOLD)
}

// fg: BLACK(is_light: false) bg: GREEN style: BOLD
func PBlackBgGreenBold(txt string) string {
	return P(txt, BLACK, GREEN.Pointer(), BOLD)
}

// fg: BLACK(is_light: false) bg: YELLOW style: BOLD
func PBlackBgYellowBold(txt string) string {
	return P(txt, BLACK, YELLOW.Pointer(), BOLD)
}

// fg: BLACK(is_light: false) bg: BLUE style: BOLD
func PBlackBgBlueBold(txt string) string {
	return P(txt, BLACK, BLUE.Pointer(), BOLD)
}

// fg: BLACK(is_light: false) bg: MAGENTA style: BOLD
func PBlackBgMagentaBold(txt string) string {
	return P(txt, BLACK, MAGENTA.Pointer(), BOLD)
}

// fg: BLACK(is_light: false) bg: CYAN style: BOLD
func PBlackBgCyanBold(txt string) string {
	return P(txt, BLACK, CYAN.Pointer(), BOLD)
}

// fg: BLACK(is_light: false) bg: WHITE style: BOLD
func PBlackBgWhiteBold(txt string) string {
	return P(txt, BLACK, WHITE.Pointer(), BOLD)
}

// fg: RED(is_light: false) bg: BLACK style: BOLD
func PRedBgBlackBold(txt string) string {
	return P(txt, RED, BLACK.Pointer(), BOLD)
}

// fg: RED(is_light: false) bg: RED style: BOLD
func PRedBold(txt string) string {
	return P(txt, RED, nil, BOLD)
}

// fg: RED(is_light: false) bg: GREEN style: BOLD
func PRedBgGreenBold(txt string) string {
	return P(txt, RED, GREEN.Pointer(), BOLD)
}

// fg: RED(is_light: false) bg: YELLOW style: BOLD
func PRedBgYellowBold(txt string) string {
	return P(txt, RED, YELLOW.Pointer(), BOLD)
}

// fg: RED(is_light: false) bg: BLUE style: BOLD
func PRedBgBlueBold(txt string) string {
	return P(txt, RED, BLUE.Pointer(), BOLD)
}

// fg: RED(is_light: false) bg: MAGENTA style: BOLD
func PRedBgMagentaBold(txt string) string {
	return P(txt, RED, MAGENTA.Pointer(), BOLD)
}

// fg: RED(is_light: false) bg: CYAN style: BOLD
func PRedBgCyanBold(txt string) string {
	return P(txt, RED, CYAN.Pointer(), BOLD)
}

// fg: RED(is_light: false) bg: WHITE style: BOLD
func PRedBgWhiteBold(txt string) string {
	return P(txt, RED, WHITE.Pointer(), BOLD)
}

// fg: GREEN(is_light: false) bg: BLACK style: BOLD
func PGreenBgBlackBold(txt string) string {
	return P(txt, GREEN, BLACK.Pointer(), BOLD)
}

// fg: GREEN(is_light: false) bg: RED style: BOLD
func PGreenBgRedBold(txt string) string {
	return P(txt, GREEN, RED.Pointer(), BOLD)
}

// fg: GREEN(is_light: false) bg: GREEN style: BOLD
func PGreenBold(txt string) string {
	return P(txt, GREEN, nil, BOLD)
}

// fg: GREEN(is_light: false) bg: YELLOW style: BOLD
func PGreenBgYellowBold(txt string) string {
	return P(txt, GREEN, YELLOW.Pointer(), BOLD)
}

// fg: GREEN(is_light: false) bg: BLUE style: BOLD
func PGreenBgBlueBold(txt string) string {
	return P(txt, GREEN, BLUE.Pointer(), BOLD)
}

// fg: GREEN(is_light: false) bg: MAGENTA style: BOLD
func PGreenBgMagentaBold(txt string) string {
	return P(txt, GREEN, MAGENTA.Pointer(), BOLD)
}

// fg: GREEN(is_light: false) bg: CYAN style: BOLD
func PGreenBgCyanBold(txt string) string {
	return P(txt, GREEN, CYAN.Pointer(), BOLD)
}

// fg: GREEN(is_light: false) bg: WHITE style: BOLD
func PGreenBgWhiteBold(txt string) string {
	return P(txt, GREEN, WHITE.Pointer(), BOLD)
}

// fg: YELLOW(is_light: false) bg: BLACK style: BOLD
func PYellowBgBlackBold(txt string) string {
	return P(txt, YELLOW, BLACK.Pointer(), BOLD)
}

// fg: YELLOW(is_light: false) bg: RED style: BOLD
func PYellowBgRedBold(txt string) string {
	return P(txt, YELLOW, RED.Pointer(), BOLD)
}

// fg: YELLOW(is_light: false) bg: GREEN style: BOLD
func PYellowBgGreenBold(txt string) string {
	return P(txt, YELLOW, GREEN.Pointer(), BOLD)
}

// fg: YELLOW(is_light: false) bg: YELLOW style: BOLD
func PYellowBold(txt string) string {
	return P(txt, YELLOW, nil, BOLD)
}

// fg: YELLOW(is_light: false) bg: BLUE style: BOLD
func PYellowBgBlueBold(txt string) string {
	return P(txt, YELLOW, BLUE.Pointer(), BOLD)
}

// fg: YELLOW(is_light: false) bg: MAGENTA style: BOLD
func PYellowBgMagentaBold(txt string) string {
	return P(txt, YELLOW, MAGENTA.Pointer(), BOLD)
}

// fg: YELLOW(is_light: false) bg: CYAN style: BOLD
func PYellowBgCyanBold(txt string) string {
	return P(txt, YELLOW, CYAN.Pointer(), BOLD)
}

// fg: YELLOW(is_light: false) bg: WHITE style: BOLD
func PYellowBgWhiteBold(txt string) string {
	return P(txt, YELLOW, WHITE.Pointer(), BOLD)
}

// fg: BLUE(is_light: false) bg: BLACK style: BOLD
func PBlueBgBlackBold(txt string) string {
	return P(txt, BLUE, BLACK.Pointer(), BOLD)
}

// fg: BLUE(is_light: false) bg: RED style: BOLD
func PBlueBgRedBold(txt string) string {
	return P(txt, BLUE, RED.Pointer(), BOLD)
}

// fg: BLUE(is_light: false) bg: GREEN style: BOLD
func PBlueBgGreenBold(txt string) string {
	return P(txt, BLUE, GREEN.Pointer(), BOLD)
}

// fg: BLUE(is_light: false) bg: YELLOW style: BOLD
func PBlueBgYellowBold(txt string) string {
	return P(txt, BLUE, YELLOW.Pointer(), BOLD)
}

// fg: BLUE(is_light: false) bg: BLUE style: BOLD
func PBlueBold(txt string) string {
	return P(txt, BLUE, nil, BOLD)
}

// fg: BLUE(is_light: false) bg: MAGENTA style: BOLD
func PBlueBgMagentaBold(txt string) string {
	return P(txt, BLUE, MAGENTA.Pointer(), BOLD)
}

// fg: BLUE(is_light: false) bg: CYAN style: BOLD
func PBlueBgCyanBold(txt string) string {
	return P(txt, BLUE, CYAN.Pointer(), BOLD)
}

// fg: BLUE(is_light: false) bg: WHITE style: BOLD
func PBlueBgWhiteBold(txt string) string {
	return P(txt, BLUE, WHITE.Pointer(), BOLD)
}

// fg: MAGENTA(is_light: false) bg: BLACK style: BOLD
func PMagentaBgBlackBold(txt string) string {
	return P(txt, MAGENTA, BLACK.Pointer(), BOLD)
}

// fg: MAGENTA(is_light: false) bg: RED style: BOLD
func PMagentaBgRedBold(txt string) string {
	return P(txt, MAGENTA, RED.Pointer(), BOLD)
}

// fg: MAGENTA(is_light: false) bg: GREEN style: BOLD
func PMagentaBgGreenBold(txt string) string {
	return P(txt, MAGENTA, GREEN.Pointer(), BOLD)
}

// fg: MAGENTA(is_light: false) bg: YELLOW style: BOLD
func PMagentaBgYellowBold(txt string) string {
	return P(txt, MAGENTA, YELLOW.Pointer(), BOLD)
}

// fg: MAGENTA(is_light: false) bg: BLUE style: BOLD
func PMagentaBgBlueBold(txt string) string {
	return P(txt, MAGENTA, BLUE.Pointer(), BOLD)
}

// fg: MAGENTA(is_light: false) bg: MAGENTA style: BOLD
func PMagentaBold(txt string) string {
	return P(txt, MAGENTA, nil, BOLD)
}

// fg: MAGENTA(is_light: false) bg: CYAN style: BOLD
func PMagentaBgCyanBold(txt string) string {
	return P(txt, MAGENTA, CYAN.Pointer(), BOLD)
}

// fg: MAGENTA(is_light: false) bg: WHITE style: BOLD
func PMagentaBgWhiteBold(txt string) string {
	return P(txt, MAGENTA, WHITE.Pointer(), BOLD)
}

// fg: CYAN(is_light: false) bg: BLACK style: BOLD
func PCyanBgBlackBold(txt string) string {
	return P(txt, CYAN, BLACK.Pointer(), BOLD)
}

// fg: CYAN(is_light: false) bg: RED style: BOLD
func PCyanBgRedBold(txt string) string {
	return P(txt, CYAN, RED.Pointer(), BOLD)
}

// fg: CYAN(is_light: false) bg: GREEN style: BOLD
func PCyanBgGreenBold(txt string) string {
	return P(txt, CYAN, GREEN.Pointer(), BOLD)
}

// fg: CYAN(is_light: false) bg: YELLOW style: BOLD
func PCyanBgYellowBold(txt string) string {
	return P(txt, CYAN, YELLOW.Pointer(), BOLD)
}

// fg: CYAN(is_light: false) bg: BLUE style: BOLD
func PCyanBgBlueBold(txt string) string {
	return P(txt, CYAN, BLUE.Pointer(), BOLD)
}

// fg: CYAN(is_light: false) bg: MAGENTA style: BOLD
func PCyanBgMagentaBold(txt string) string {
	return P(txt, CYAN, MAGENTA.Pointer(), BOLD)
}

// fg: CYAN(is_light: false) bg: CYAN style: BOLD
func PCyanBold(txt string) string {
	return P(txt, CYAN, nil, BOLD)
}

// fg: CYAN(is_light: false) bg: WHITE style: BOLD
func PCyanBgWhiteBold(txt string) string {
	return P(txt, CYAN, WHITE.Pointer(), BOLD)
}

// fg: WHITE(is_light: false) bg: BLACK style: BOLD
func PWhiteBgBlackBold(txt string) string {
	return P(txt, WHITE, BLACK.Pointer(), BOLD)
}

// fg: WHITE(is_light: false) bg: RED style: BOLD
func PWhiteBgRedBold(txt string) string {
	return P(txt, WHITE, RED.Pointer(), BOLD)
}

// fg: WHITE(is_light: false) bg: GREEN style: BOLD
func PWhiteBgGreenBold(txt string) string {
	return P(txt, WHITE, GREEN.Pointer(), BOLD)
}

// fg: WHITE(is_light: false) bg: YELLOW style: BOLD
func PWhiteBgYellowBold(txt string) string {
	return P(txt, WHITE, YELLOW.Pointer(), BOLD)
}

// fg: WHITE(is_light: false) bg: BLUE style: BOLD
func PWhiteBgBlueBold(txt string) string {
	return P(txt, WHITE, BLUE.Pointer(), BOLD)
}

// fg: WHITE(is_light: false) bg: MAGENTA style: BOLD
func PWhiteBgMagentaBold(txt string) string {
	return P(txt, WHITE, MAGENTA.Pointer(), BOLD)
}

// fg: WHITE(is_light: false) bg: CYAN style: BOLD
func PWhiteBgCyanBold(txt string) string {
	return P(txt, WHITE, CYAN.Pointer(), BOLD)
}

// fg: WHITE(is_light: false) bg: WHITE style: BOLD
func PWhiteBold(txt string) string {
	return P(txt, WHITE, nil, BOLD)
}

// fg: BLACK(is_light: false) bg: BLACK style: FAINT
func PBlackFaint(txt string) string {
	return P(txt, BLACK, nil, FAINT)
}

// fg: BLACK(is_light: false) bg: RED style: FAINT
func PBlackBgRedFaint(txt string) string {
	return P(txt, BLACK, RED.Pointer(), FAINT)
}

// fg: BLACK(is_light: false) bg: GREEN style: FAINT
func PBlackBgGreenFaint(txt string) string {
	return P(txt, BLACK, GREEN.Pointer(), FAINT)
}

// fg: BLACK(is_light: false) bg: YELLOW style: FAINT
func PBlackBgYellowFaint(txt string) string {
	return P(txt, BLACK, YELLOW.Pointer(), FAINT)
}

// fg: BLACK(is_light: false) bg: BLUE style: FAINT
func PBlackBgBlueFaint(txt string) string {
	return P(txt, BLACK, BLUE.Pointer(), FAINT)
}

// fg: BLACK(is_light: false) bg: MAGENTA style: FAINT
func PBlackBgMagentaFaint(txt string) string {
	return P(txt, BLACK, MAGENTA.Pointer(), FAINT)
}

// fg: BLACK(is_light: false) bg: CYAN style: FAINT
func PBlackBgCyanFaint(txt string) string {
	return P(txt, BLACK, CYAN.Pointer(), FAINT)
}

// fg: BLACK(is_light: false) bg: WHITE style: FAINT
func PBlackBgWhiteFaint(txt string) string {
	return P(txt, BLACK, WHITE.Pointer(), FAINT)
}

// fg: RED(is_light: false) bg: BLACK style: FAINT
func PRedBgBlackFaint(txt string) string {
	return P(txt, RED, BLACK.Pointer(), FAINT)
}

// fg: RED(is_light: false) bg: RED style: FAINT
func PRedFaint(txt string) string {
	return P(txt, RED, nil, FAINT)
}

// fg: RED(is_light: false) bg: GREEN style: FAINT
func PRedBgGreenFaint(txt string) string {
	return P(txt, RED, GREEN.Pointer(), FAINT)
}

// fg: RED(is_light: false) bg: YELLOW style: FAINT
func PRedBgYellowFaint(txt string) string {
	return P(txt, RED, YELLOW.Pointer(), FAINT)
}

// fg: RED(is_light: false) bg: BLUE style: FAINT
func PRedBgBlueFaint(txt string) string {
	return P(txt, RED, BLUE.Pointer(), FAINT)
}

// fg: RED(is_light: false) bg: MAGENTA style: FAINT
func PRedBgMagentaFaint(txt string) string {
	return P(txt, RED, MAGENTA.Pointer(), FAINT)
}

// fg: RED(is_light: false) bg: CYAN style: FAINT
func PRedBgCyanFaint(txt string) string {
	return P(txt, RED, CYAN.Pointer(), FAINT)
}

// fg: RED(is_light: false) bg: WHITE style: FAINT
func PRedBgWhiteFaint(txt string) string {
	return P(txt, RED, WHITE.Pointer(), FAINT)
}

// fg: GREEN(is_light: false) bg: BLACK style: FAINT
func PGreenBgBlackFaint(txt string) string {
	return P(txt, GREEN, BLACK.Pointer(), FAINT)
}

// fg: GREEN(is_light: false) bg: RED style: FAINT
func PGreenBgRedFaint(txt string) string {
	return P(txt, GREEN, RED.Pointer(), FAINT)
}

// fg: GREEN(is_light: false) bg: GREEN style: FAINT
func PGreenFaint(txt string) string {
	return P(txt, GREEN, nil, FAINT)
}

// fg: GREEN(is_light: false) bg: YELLOW style: FAINT
func PGreenBgYellowFaint(txt string) string {
	return P(txt, GREEN, YELLOW.Pointer(), FAINT)
}

// fg: GREEN(is_light: false) bg: BLUE style: FAINT
func PGreenBgBlueFaint(txt string) string {
	return P(txt, GREEN, BLUE.Pointer(), FAINT)
}

// fg: GREEN(is_light: false) bg: MAGENTA style: FAINT
func PGreenBgMagentaFaint(txt string) string {
	return P(txt, GREEN, MAGENTA.Pointer(), FAINT)
}

// fg: GREEN(is_light: false) bg: CYAN style: FAINT
func PGreenBgCyanFaint(txt string) string {
	return P(txt, GREEN, CYAN.Pointer(), FAINT)
}

// fg: GREEN(is_light: false) bg: WHITE style: FAINT
func PGreenBgWhiteFaint(txt string) string {
	return P(txt, GREEN, WHITE.Pointer(), FAINT)
}

// fg: YELLOW(is_light: false) bg: BLACK style: FAINT
func PYellowBgBlackFaint(txt string) string {
	return P(txt, YELLOW, BLACK.Pointer(), FAINT)
}

// fg: YELLOW(is_light: false) bg: RED style: FAINT
func PYellowBgRedFaint(txt string) string {
	return P(txt, YELLOW, RED.Pointer(), FAINT)
}

// fg: YELLOW(is_light: false) bg: GREEN style: FAINT
func PYellowBgGreenFaint(txt string) string {
	return P(txt, YELLOW, GREEN.Pointer(), FAINT)
}

// fg: YELLOW(is_light: false) bg: YELLOW style: FAINT
func PYellowFaint(txt string) string {
	return P(txt, YELLOW, nil, FAINT)
}

// fg: YELLOW(is_light: false) bg: BLUE style: FAINT
func PYellowBgBlueFaint(txt string) string {
	return P(txt, YELLOW, BLUE.Pointer(), FAINT)
}

// fg: YELLOW(is_light: false) bg: MAGENTA style: FAINT
func PYellowBgMagentaFaint(txt string) string {
	return P(txt, YELLOW, MAGENTA.Pointer(), FAINT)
}

// fg: YELLOW(is_light: false) bg: CYAN style: FAINT
func PYellowBgCyanFaint(txt string) string {
	return P(txt, YELLOW, CYAN.Pointer(), FAINT)
}

// fg: YELLOW(is_light: false) bg: WHITE style: FAINT
func PYellowBgWhiteFaint(txt string) string {
	return P(txt, YELLOW, WHITE.Pointer(), FAINT)
}

// fg: BLUE(is_light: false) bg: BLACK style: FAINT
func PBlueBgBlackFaint(txt string) string {
	return P(txt, BLUE, BLACK.Pointer(), FAINT)
}

// fg: BLUE(is_light: false) bg: RED style: FAINT
func PBlueBgRedFaint(txt string) string {
	return P(txt, BLUE, RED.Pointer(), FAINT)
}

// fg: BLUE(is_light: false) bg: GREEN style: FAINT
func PBlueBgGreenFaint(txt string) string {
	return P(txt, BLUE, GREEN.Pointer(), FAINT)
}

// fg: BLUE(is_light: false) bg: YELLOW style: FAINT
func PBlueBgYellowFaint(txt string) string {
	return P(txt, BLUE, YELLOW.Pointer(), FAINT)
}

// fg: BLUE(is_light: false) bg: BLUE style: FAINT
func PBlueFaint(txt string) string {
	return P(txt, BLUE, nil, FAINT)
}

// fg: BLUE(is_light: false) bg: MAGENTA style: FAINT
func PBlueBgMagentaFaint(txt string) string {
	return P(txt, BLUE, MAGENTA.Pointer(), FAINT)
}

// fg: BLUE(is_light: false) bg: CYAN style: FAINT
func PBlueBgCyanFaint(txt string) string {
	return P(txt, BLUE, CYAN.Pointer(), FAINT)
}

// fg: BLUE(is_light: false) bg: WHITE style: FAINT
func PBlueBgWhiteFaint(txt string) string {
	return P(txt, BLUE, WHITE.Pointer(), FAINT)
}

// fg: MAGENTA(is_light: false) bg: BLACK style: FAINT
func PMagentaBgBlackFaint(txt string) string {
	return P(txt, MAGENTA, BLACK.Pointer(), FAINT)
}

// fg: MAGENTA(is_light: false) bg: RED style: FAINT
func PMagentaBgRedFaint(txt string) string {
	return P(txt, MAGENTA, RED.Pointer(), FAINT)
}

// fg: MAGENTA(is_light: false) bg: GREEN style: FAINT
func PMagentaBgGreenFaint(txt string) string {
	return P(txt, MAGENTA, GREEN.Pointer(), FAINT)
}

// fg: MAGENTA(is_light: false) bg: YELLOW style: FAINT
func PMagentaBgYellowFaint(txt string) string {
	return P(txt, MAGENTA, YELLOW.Pointer(), FAINT)
}

// fg: MAGENTA(is_light: false) bg: BLUE style: FAINT
func PMagentaBgBlueFaint(txt string) string {
	return P(txt, MAGENTA, BLUE.Pointer(), FAINT)
}

// fg: MAGENTA(is_light: false) bg: MAGENTA style: FAINT
func PMagentaFaint(txt string) string {
	return P(txt, MAGENTA, nil, FAINT)
}

// fg: MAGENTA(is_light: false) bg: CYAN style: FAINT
func PMagentaBgCyanFaint(txt string) string {
	return P(txt, MAGENTA, CYAN.Pointer(), FAINT)
}

// fg: MAGENTA(is_light: false) bg: WHITE style: FAINT
func PMagentaBgWhiteFaint(txt string) string {
	return P(txt, MAGENTA, WHITE.Pointer(), FAINT)
}

// fg: CYAN(is_light: false) bg: BLACK style: FAINT
func PCyanBgBlackFaint(txt string) string {
	return P(txt, CYAN, BLACK.Pointer(), FAINT)
}

// fg: CYAN(is_light: false) bg: RED style: FAINT
func PCyanBgRedFaint(txt string) string {
	return P(txt, CYAN, RED.Pointer(), FAINT)
}

// fg: CYAN(is_light: false) bg: GREEN style: FAINT
func PCyanBgGreenFaint(txt string) string {
	return P(txt, CYAN, GREEN.Pointer(), FAINT)
}

// fg: CYAN(is_light: false) bg: YELLOW style: FAINT
func PCyanBgYellowFaint(txt string) string {
	return P(txt, CYAN, YELLOW.Pointer(), FAINT)
}

// fg: CYAN(is_light: false) bg: BLUE style: FAINT
func PCyanBgBlueFaint(txt string) string {
	return P(txt, CYAN, BLUE.Pointer(), FAINT)
}

// fg: CYAN(is_light: false) bg: MAGENTA style: FAINT
func PCyanBgMagentaFaint(txt string) string {
	return P(txt, CYAN, MAGENTA.Pointer(), FAINT)
}

// fg: CYAN(is_light: false) bg: CYAN style: FAINT
func PCyanFaint(txt string) string {
	return P(txt, CYAN, nil, FAINT)
}

// fg: CYAN(is_light: false) bg: WHITE style: FAINT
func PCyanBgWhiteFaint(txt string) string {
	return P(txt, CYAN, WHITE.Pointer(), FAINT)
}

// fg: WHITE(is_light: false) bg: BLACK style: FAINT
func PWhiteBgBlackFaint(txt string) string {
	return P(txt, WHITE, BLACK.Pointer(), FAINT)
}

// fg: WHITE(is_light: false) bg: RED style: FAINT
func PWhiteBgRedFaint(txt string) string {
	return P(txt, WHITE, RED.Pointer(), FAINT)
}

// fg: WHITE(is_light: false) bg: GREEN style: FAINT
func PWhiteBgGreenFaint(txt string) string {
	return P(txt, WHITE, GREEN.Pointer(), FAINT)
}

// fg: WHITE(is_light: false) bg: YELLOW style: FAINT
func PWhiteBgYellowFaint(txt string) string {
	return P(txt, WHITE, YELLOW.Pointer(), FAINT)
}

// fg: WHITE(is_light: false) bg: BLUE style: FAINT
func PWhiteBgBlueFaint(txt string) string {
	return P(txt, WHITE, BLUE.Pointer(), FAINT)
}

// fg: WHITE(is_light: false) bg: MAGENTA style: FAINT
func PWhiteBgMagentaFaint(txt string) string {
	return P(txt, WHITE, MAGENTA.Pointer(), FAINT)
}

// fg: WHITE(is_light: false) bg: CYAN style: FAINT
func PWhiteBgCyanFaint(txt string) string {
	return P(txt, WHITE, CYAN.Pointer(), FAINT)
}

// fg: WHITE(is_light: false) bg: WHITE style: FAINT
func PWhiteFaint(txt string) string {
	return P(txt, WHITE, nil, FAINT)
}

// fg: BLACK(is_light: false) bg: BLACK style: ITALIC
func PBlackItalic(txt string) string {
	return P(txt, BLACK, nil, ITALIC)
}

// fg: BLACK(is_light: false) bg: RED style: ITALIC
func PBlackBgRedItalic(txt string) string {
	return P(txt, BLACK, RED.Pointer(), ITALIC)
}

// fg: BLACK(is_light: false) bg: GREEN style: ITALIC
func PBlackBgGreenItalic(txt string) string {
	return P(txt, BLACK, GREEN.Pointer(), ITALIC)
}

// fg: BLACK(is_light: false) bg: YELLOW style: ITALIC
func PBlackBgYellowItalic(txt string) string {
	return P(txt, BLACK, YELLOW.Pointer(), ITALIC)
}

// fg: BLACK(is_light: false) bg: BLUE style: ITALIC
func PBlackBgBlueItalic(txt string) string {
	return P(txt, BLACK, BLUE.Pointer(), ITALIC)
}

// fg: BLACK(is_light: false) bg: MAGENTA style: ITALIC
func PBlackBgMagentaItalic(txt string) string {
	return P(txt, BLACK, MAGENTA.Pointer(), ITALIC)
}

// fg: BLACK(is_light: false) bg: CYAN style: ITALIC
func PBlackBgCyanItalic(txt string) string {
	return P(txt, BLACK, CYAN.Pointer(), ITALIC)
}

// fg: BLACK(is_light: false) bg: WHITE style: ITALIC
func PBlackBgWhiteItalic(txt string) string {
	return P(txt, BLACK, WHITE.Pointer(), ITALIC)
}

// fg: RED(is_light: false) bg: BLACK style: ITALIC
func PRedBgBlackItalic(txt string) string {
	return P(txt, RED, BLACK.Pointer(), ITALIC)
}

// fg: RED(is_light: false) bg: RED style: ITALIC
func PRedItalic(txt string) string {
	return P(txt, RED, nil, ITALIC)
}

// fg: RED(is_light: false) bg: GREEN style: ITALIC
func PRedBgGreenItalic(txt string) string {
	return P(txt, RED, GREEN.Pointer(), ITALIC)
}

// fg: RED(is_light: false) bg: YELLOW style: ITALIC
func PRedBgYellowItalic(txt string) string {
	return P(txt, RED, YELLOW.Pointer(), ITALIC)
}

// fg: RED(is_light: false) bg: BLUE style: ITALIC
func PRedBgBlueItalic(txt string) string {
	return P(txt, RED, BLUE.Pointer(), ITALIC)
}

// fg: RED(is_light: false) bg: MAGENTA style: ITALIC
func PRedBgMagentaItalic(txt string) string {
	return P(txt, RED, MAGENTA.Pointer(), ITALIC)
}

// fg: RED(is_light: false) bg: CYAN style: ITALIC
func PRedBgCyanItalic(txt string) string {
	return P(txt, RED, CYAN.Pointer(), ITALIC)
}

// fg: RED(is_light: false) bg: WHITE style: ITALIC
func PRedBgWhiteItalic(txt string) string {
	return P(txt, RED, WHITE.Pointer(), ITALIC)
}

// fg: GREEN(is_light: false) bg: BLACK style: ITALIC
func PGreenBgBlackItalic(txt string) string {
	return P(txt, GREEN, BLACK.Pointer(), ITALIC)
}

// fg: GREEN(is_light: false) bg: RED style: ITALIC
func PGreenBgRedItalic(txt string) string {
	return P(txt, GREEN, RED.Pointer(), ITALIC)
}

// fg: GREEN(is_light: false) bg: GREEN style: ITALIC
func PGreenItalic(txt string) string {
	return P(txt, GREEN, nil, ITALIC)
}

// fg: GREEN(is_light: false) bg: YELLOW style: ITALIC
func PGreenBgYellowItalic(txt string) string {
	return P(txt, GREEN, YELLOW.Pointer(), ITALIC)
}

// fg: GREEN(is_light: false) bg: BLUE style: ITALIC
func PGreenBgBlueItalic(txt string) string {
	return P(txt, GREEN, BLUE.Pointer(), ITALIC)
}

// fg: GREEN(is_light: false) bg: MAGENTA style: ITALIC
func PGreenBgMagentaItalic(txt string) string {
	return P(txt, GREEN, MAGENTA.Pointer(), ITALIC)
}

// fg: GREEN(is_light: false) bg: CYAN style: ITALIC
func PGreenBgCyanItalic(txt string) string {
	return P(txt, GREEN, CYAN.Pointer(), ITALIC)
}

// fg: GREEN(is_light: false) bg: WHITE style: ITALIC
func PGreenBgWhiteItalic(txt string) string {
	return P(txt, GREEN, WHITE.Pointer(), ITALIC)
}

// fg: YELLOW(is_light: false) bg: BLACK style: ITALIC
func PYellowBgBlackItalic(txt string) string {
	return P(txt, YELLOW, BLACK.Pointer(), ITALIC)
}

// fg: YELLOW(is_light: false) bg: RED style: ITALIC
func PYellowBgRedItalic(txt string) string {
	return P(txt, YELLOW, RED.Pointer(), ITALIC)
}

// fg: YELLOW(is_light: false) bg: GREEN style: ITALIC
func PYellowBgGreenItalic(txt string) string {
	return P(txt, YELLOW, GREEN.Pointer(), ITALIC)
}

// fg: YELLOW(is_light: false) bg: YELLOW style: ITALIC
func PYellowItalic(txt string) string {
	return P(txt, YELLOW, nil, ITALIC)
}

// fg: YELLOW(is_light: false) bg: BLUE style: ITALIC
func PYellowBgBlueItalic(txt string) string {
	return P(txt, YELLOW, BLUE.Pointer(), ITALIC)
}

// fg: YELLOW(is_light: false) bg: MAGENTA style: ITALIC
func PYellowBgMagentaItalic(txt string) string {
	return P(txt, YELLOW, MAGENTA.Pointer(), ITALIC)
}

// fg: YELLOW(is_light: false) bg: CYAN style: ITALIC
func PYellowBgCyanItalic(txt string) string {
	return P(txt, YELLOW, CYAN.Pointer(), ITALIC)
}

// fg: YELLOW(is_light: false) bg: WHITE style: ITALIC
func PYellowBgWhiteItalic(txt string) string {
	return P(txt, YELLOW, WHITE.Pointer(), ITALIC)
}

// fg: BLUE(is_light: false) bg: BLACK style: ITALIC
func PBlueBgBlackItalic(txt string) string {
	return P(txt, BLUE, BLACK.Pointer(), ITALIC)
}

// fg: BLUE(is_light: false) bg: RED style: ITALIC
func PBlueBgRedItalic(txt string) string {
	return P(txt, BLUE, RED.Pointer(), ITALIC)
}

// fg: BLUE(is_light: false) bg: GREEN style: ITALIC
func PBlueBgGreenItalic(txt string) string {
	return P(txt, BLUE, GREEN.Pointer(), ITALIC)
}

// fg: BLUE(is_light: false) bg: YELLOW style: ITALIC
func PBlueBgYellowItalic(txt string) string {
	return P(txt, BLUE, YELLOW.Pointer(), ITALIC)
}

// fg: BLUE(is_light: false) bg: BLUE style: ITALIC
func PBlueItalic(txt string) string {
	return P(txt, BLUE, nil, ITALIC)
}

// fg: BLUE(is_light: false) bg: MAGENTA style: ITALIC
func PBlueBgMagentaItalic(txt string) string {
	return P(txt, BLUE, MAGENTA.Pointer(), ITALIC)
}

// fg: BLUE(is_light: false) bg: CYAN style: ITALIC
func PBlueBgCyanItalic(txt string) string {
	return P(txt, BLUE, CYAN.Pointer(), ITALIC)
}

// fg: BLUE(is_light: false) bg: WHITE style: ITALIC
func PBlueBgWhiteItalic(txt string) string {
	return P(txt, BLUE, WHITE.Pointer(), ITALIC)
}

// fg: MAGENTA(is_light: false) bg: BLACK style: ITALIC
func PMagentaBgBlackItalic(txt string) string {
	return P(txt, MAGENTA, BLACK.Pointer(), ITALIC)
}

// fg: MAGENTA(is_light: false) bg: RED style: ITALIC
func PMagentaBgRedItalic(txt string) string {
	return P(txt, MAGENTA, RED.Pointer(), ITALIC)
}

// fg: MAGENTA(is_light: false) bg: GREEN style: ITALIC
func PMagentaBgGreenItalic(txt string) string {
	return P(txt, MAGENTA, GREEN.Pointer(), ITALIC)
}

// fg: MAGENTA(is_light: false) bg: YELLOW style: ITALIC
func PMagentaBgYellowItalic(txt string) string {
	return P(txt, MAGENTA, YELLOW.Pointer(), ITALIC)
}

// fg: MAGENTA(is_light: false) bg: BLUE style: ITALIC
func PMagentaBgBlueItalic(txt string) string {
	return P(txt, MAGENTA, BLUE.Pointer(), ITALIC)
}

// fg: MAGENTA(is_light: false) bg: MAGENTA style: ITALIC
func PMagentaItalic(txt string) string {
	return P(txt, MAGENTA, nil, ITALIC)
}

// fg: MAGENTA(is_light: false) bg: CYAN style: ITALIC
func PMagentaBgCyanItalic(txt string) string {
	return P(txt, MAGENTA, CYAN.Pointer(), ITALIC)
}

// fg: MAGENTA(is_light: false) bg: WHITE style: ITALIC
func PMagentaBgWhiteItalic(txt string) string {
	return P(txt, MAGENTA, WHITE.Pointer(), ITALIC)
}

// fg: CYAN(is_light: false) bg: BLACK style: ITALIC
func PCyanBgBlackItalic(txt string) string {
	return P(txt, CYAN, BLACK.Pointer(), ITALIC)
}

// fg: CYAN(is_light: false) bg: RED style: ITALIC
func PCyanBgRedItalic(txt string) string {
	return P(txt, CYAN, RED.Pointer(), ITALIC)
}

// fg: CYAN(is_light: false) bg: GREEN style: ITALIC
func PCyanBgGreenItalic(txt string) string {
	return P(txt, CYAN, GREEN.Pointer(), ITALIC)
}

// fg: CYAN(is_light: false) bg: YELLOW style: ITALIC
func PCyanBgYellowItalic(txt string) string {
	return P(txt, CYAN, YELLOW.Pointer(), ITALIC)
}

// fg: CYAN(is_light: false) bg: BLUE style: ITALIC
func PCyanBgBlueItalic(txt string) string {
	return P(txt, CYAN, BLUE.Pointer(), ITALIC)
}

// fg: CYAN(is_light: false) bg: MAGENTA style: ITALIC
func PCyanBgMagentaItalic(txt string) string {
	return P(txt, CYAN, MAGENTA.Pointer(), ITALIC)
}

// fg: CYAN(is_light: false) bg: CYAN style: ITALIC
func PCyanItalic(txt string) string {
	return P(txt, CYAN, nil, ITALIC)
}

// fg: CYAN(is_light: false) bg: WHITE style: ITALIC
func PCyanBgWhiteItalic(txt string) string {
	return P(txt, CYAN, WHITE.Pointer(), ITALIC)
}

// fg: WHITE(is_light: false) bg: BLACK style: ITALIC
func PWhiteBgBlackItalic(txt string) string {
	return P(txt, WHITE, BLACK.Pointer(), ITALIC)
}

// fg: WHITE(is_light: false) bg: RED style: ITALIC
func PWhiteBgRedItalic(txt string) string {
	return P(txt, WHITE, RED.Pointer(), ITALIC)
}

// fg: WHITE(is_light: false) bg: GREEN style: ITALIC
func PWhiteBgGreenItalic(txt string) string {
	return P(txt, WHITE, GREEN.Pointer(), ITALIC)
}

// fg: WHITE(is_light: false) bg: YELLOW style: ITALIC
func PWhiteBgYellowItalic(txt string) string {
	return P(txt, WHITE, YELLOW.Pointer(), ITALIC)
}

// fg: WHITE(is_light: false) bg: BLUE style: ITALIC
func PWhiteBgBlueItalic(txt string) string {
	return P(txt, WHITE, BLUE.Pointer(), ITALIC)
}

// fg: WHITE(is_light: false) bg: MAGENTA style: ITALIC
func PWhiteBgMagentaItalic(txt string) string {
	return P(txt, WHITE, MAGENTA.Pointer(), ITALIC)
}

// fg: WHITE(is_light: false) bg: CYAN style: ITALIC
func PWhiteBgCyanItalic(txt string) string {
	return P(txt, WHITE, CYAN.Pointer(), ITALIC)
}

// fg: WHITE(is_light: false) bg: WHITE style: ITALIC
func PWhiteItalic(txt string) string {
	return P(txt, WHITE, nil, ITALIC)
}

// fg: BLACK(is_light: false) bg: BLACK style: UNDERLINE
func PBlackUnderline(txt string) string {
	return P(txt, BLACK, nil, UNDERLINE)
}

// fg: BLACK(is_light: false) bg: RED style: UNDERLINE
func PBlackBgRedUnderline(txt string) string {
	return P(txt, BLACK, RED.Pointer(), UNDERLINE)
}

// fg: BLACK(is_light: false) bg: GREEN style: UNDERLINE
func PBlackBgGreenUnderline(txt string) string {
	return P(txt, BLACK, GREEN.Pointer(), UNDERLINE)
}

// fg: BLACK(is_light: false) bg: YELLOW style: UNDERLINE
func PBlackBgYellowUnderline(txt string) string {
	return P(txt, BLACK, YELLOW.Pointer(), UNDERLINE)
}

// fg: BLACK(is_light: false) bg: BLUE style: UNDERLINE
func PBlackBgBlueUnderline(txt string) string {
	return P(txt, BLACK, BLUE.Pointer(), UNDERLINE)
}

// fg: BLACK(is_light: false) bg: MAGENTA style: UNDERLINE
func PBlackBgMagentaUnderline(txt string) string {
	return P(txt, BLACK, MAGENTA.Pointer(), UNDERLINE)
}

// fg: BLACK(is_light: false) bg: CYAN style: UNDERLINE
func PBlackBgCyanUnderline(txt string) string {
	return P(txt, BLACK, CYAN.Pointer(), UNDERLINE)
}

// fg: BLACK(is_light: false) bg: WHITE style: UNDERLINE
func PBlackBgWhiteUnderline(txt string) string {
	return P(txt, BLACK, WHITE.Pointer(), UNDERLINE)
}

// fg: RED(is_light: false) bg: BLACK style: UNDERLINE
func PRedBgBlackUnderline(txt string) string {
	return P(txt, RED, BLACK.Pointer(), UNDERLINE)
}

// fg: RED(is_light: false) bg: RED style: UNDERLINE
func PRedUnderline(txt string) string {
	return P(txt, RED, nil, UNDERLINE)
}

// fg: RED(is_light: false) bg: GREEN style: UNDERLINE
func PRedBgGreenUnderline(txt string) string {
	return P(txt, RED, GREEN.Pointer(), UNDERLINE)
}

// fg: RED(is_light: false) bg: YELLOW style: UNDERLINE
func PRedBgYellowUnderline(txt string) string {
	return P(txt, RED, YELLOW.Pointer(), UNDERLINE)
}

// fg: RED(is_light: false) bg: BLUE style: UNDERLINE
func PRedBgBlueUnderline(txt string) string {
	return P(txt, RED, BLUE.Pointer(), UNDERLINE)
}

// fg: RED(is_light: false) bg: MAGENTA style: UNDERLINE
func PRedBgMagentaUnderline(txt string) string {
	return P(txt, RED, MAGENTA.Pointer(), UNDERLINE)
}

// fg: RED(is_light: false) bg: CYAN style: UNDERLINE
func PRedBgCyanUnderline(txt string) string {
	return P(txt, RED, CYAN.Pointer(), UNDERLINE)
}

// fg: RED(is_light: false) bg: WHITE style: UNDERLINE
func PRedBgWhiteUnderline(txt string) string {
	return P(txt, RED, WHITE.Pointer(), UNDERLINE)
}

// fg: GREEN(is_light: false) bg: BLACK style: UNDERLINE
func PGreenBgBlackUnderline(txt string) string {
	return P(txt, GREEN, BLACK.Pointer(), UNDERLINE)
}

// fg: GREEN(is_light: false) bg: RED style: UNDERLINE
func PGreenBgRedUnderline(txt string) string {
	return P(txt, GREEN, RED.Pointer(), UNDERLINE)
}

// fg: GREEN(is_light: false) bg: GREEN style: UNDERLINE
func PGreenUnderline(txt string) string {
	return P(txt, GREEN, nil, UNDERLINE)
}

// fg: GREEN(is_light: false) bg: YELLOW style: UNDERLINE
func PGreenBgYellowUnderline(txt string) string {
	return P(txt, GREEN, YELLOW.Pointer(), UNDERLINE)
}

// fg: GREEN(is_light: false) bg: BLUE style: UNDERLINE
func PGreenBgBlueUnderline(txt string) string {
	return P(txt, GREEN, BLUE.Pointer(), UNDERLINE)
}

// fg: GREEN(is_light: false) bg: MAGENTA style: UNDERLINE
func PGreenBgMagentaUnderline(txt string) string {
	return P(txt, GREEN, MAGENTA.Pointer(), UNDERLINE)
}

// fg: GREEN(is_light: false) bg: CYAN style: UNDERLINE
func PGreenBgCyanUnderline(txt string) string {
	return P(txt, GREEN, CYAN.Pointer(), UNDERLINE)
}

// fg: GREEN(is_light: false) bg: WHITE style: UNDERLINE
func PGreenBgWhiteUnderline(txt string) string {
	return P(txt, GREEN, WHITE.Pointer(), UNDERLINE)
}

// fg: YELLOW(is_light: false) bg: BLACK style: UNDERLINE
func PYellowBgBlackUnderline(txt string) string {
	return P(txt, YELLOW, BLACK.Pointer(), UNDERLINE)
}

// fg: YELLOW(is_light: false) bg: RED style: UNDERLINE
func PYellowBgRedUnderline(txt string) string {
	return P(txt, YELLOW, RED.Pointer(), UNDERLINE)
}

// fg: YELLOW(is_light: false) bg: GREEN style: UNDERLINE
func PYellowBgGreenUnderline(txt string) string {
	return P(txt, YELLOW, GREEN.Pointer(), UNDERLINE)
}

// fg: YELLOW(is_light: false) bg: YELLOW style: UNDERLINE
func PYellowUnderline(txt string) string {
	return P(txt, YELLOW, nil, UNDERLINE)
}

// fg: YELLOW(is_light: false) bg: BLUE style: UNDERLINE
func PYellowBgBlueUnderline(txt string) string {
	return P(txt, YELLOW, BLUE.Pointer(), UNDERLINE)
}

// fg: YELLOW(is_light: false) bg: MAGENTA style: UNDERLINE
func PYellowBgMagentaUnderline(txt string) string {
	return P(txt, YELLOW, MAGENTA.Pointer(), UNDERLINE)
}

// fg: YELLOW(is_light: false) bg: CYAN style: UNDERLINE
func PYellowBgCyanUnderline(txt string) string {
	return P(txt, YELLOW, CYAN.Pointer(), UNDERLINE)
}

// fg: YELLOW(is_light: false) bg: WHITE style: UNDERLINE
func PYellowBgWhiteUnderline(txt string) string {
	return P(txt, YELLOW, WHITE.Pointer(), UNDERLINE)
}

// fg: BLUE(is_light: false) bg: BLACK style: UNDERLINE
func PBlueBgBlackUnderline(txt string) string {
	return P(txt, BLUE, BLACK.Pointer(), UNDERLINE)
}

// fg: BLUE(is_light: false) bg: RED style: UNDERLINE
func PBlueBgRedUnderline(txt string) string {
	return P(txt, BLUE, RED.Pointer(), UNDERLINE)
}

// fg: BLUE(is_light: false) bg: GREEN style: UNDERLINE
func PBlueBgGreenUnderline(txt string) string {
	return P(txt, BLUE, GREEN.Pointer(), UNDERLINE)
}

// fg: BLUE(is_light: false) bg: YELLOW style: UNDERLINE
func PBlueBgYellowUnderline(txt string) string {
	return P(txt, BLUE, YELLOW.Pointer(), UNDERLINE)
}

// fg: BLUE(is_light: false) bg: BLUE style: UNDERLINE
func PBlueUnderline(txt string) string {
	return P(txt, BLUE, nil, UNDERLINE)
}

// fg: BLUE(is_light: false) bg: MAGENTA style: UNDERLINE
func PBlueBgMagentaUnderline(txt string) string {
	return P(txt, BLUE, MAGENTA.Pointer(), UNDERLINE)
}

// fg: BLUE(is_light: false) bg: CYAN style: UNDERLINE
func PBlueBgCyanUnderline(txt string) string {
	return P(txt, BLUE, CYAN.Pointer(), UNDERLINE)
}

// fg: BLUE(is_light: false) bg: WHITE style: UNDERLINE
func PBlueBgWhiteUnderline(txt string) string {
	return P(txt, BLUE, WHITE.Pointer(), UNDERLINE)
}

// fg: MAGENTA(is_light: false) bg: BLACK style: UNDERLINE
func PMagentaBgBlackUnderline(txt string) string {
	return P(txt, MAGENTA, BLACK.Pointer(), UNDERLINE)
}

// fg: MAGENTA(is_light: false) bg: RED style: UNDERLINE
func PMagentaBgRedUnderline(txt string) string {
	return P(txt, MAGENTA, RED.Pointer(), UNDERLINE)
}

// fg: MAGENTA(is_light: false) bg: GREEN style: UNDERLINE
func PMagentaBgGreenUnderline(txt string) string {
	return P(txt, MAGENTA, GREEN.Pointer(), UNDERLINE)
}

// fg: MAGENTA(is_light: false) bg: YELLOW style: UNDERLINE
func PMagentaBgYellowUnderline(txt string) string {
	return P(txt, MAGENTA, YELLOW.Pointer(), UNDERLINE)
}

// fg: MAGENTA(is_light: false) bg: BLUE style: UNDERLINE
func PMagentaBgBlueUnderline(txt string) string {
	return P(txt, MAGENTA, BLUE.Pointer(), UNDERLINE)
}

// fg: MAGENTA(is_light: false) bg: MAGENTA style: UNDERLINE
func PMagentaUnderline(txt string) string {
	return P(txt, MAGENTA, nil, UNDERLINE)
}

// fg: MAGENTA(is_light: false) bg: CYAN style: UNDERLINE
func PMagentaBgCyanUnderline(txt string) string {
	return P(txt, MAGENTA, CYAN.Pointer(), UNDERLINE)
}

// fg: MAGENTA(is_light: false) bg: WHITE style: UNDERLINE
func PMagentaBgWhiteUnderline(txt string) string {
	return P(txt, MAGENTA, WHITE.Pointer(), UNDERLINE)
}

// fg: CYAN(is_light: false) bg: BLACK style: UNDERLINE
func PCyanBgBlackUnderline(txt string) string {
	return P(txt, CYAN, BLACK.Pointer(), UNDERLINE)
}

// fg: CYAN(is_light: false) bg: RED style: UNDERLINE
func PCyanBgRedUnderline(txt string) string {
	return P(txt, CYAN, RED.Pointer(), UNDERLINE)
}

// fg: CYAN(is_light: false) bg: GREEN style: UNDERLINE
func PCyanBgGreenUnderline(txt string) string {
	return P(txt, CYAN, GREEN.Pointer(), UNDERLINE)
}

// fg: CYAN(is_light: false) bg: YELLOW style: UNDERLINE
func PCyanBgYellowUnderline(txt string) string {
	return P(txt, CYAN, YELLOW.Pointer(), UNDERLINE)
}

// fg: CYAN(is_light: false) bg: BLUE style: UNDERLINE
func PCyanBgBlueUnderline(txt string) string {
	return P(txt, CYAN, BLUE.Pointer(), UNDERLINE)
}

// fg: CYAN(is_light: false) bg: MAGENTA style: UNDERLINE
func PCyanBgMagentaUnderline(txt string) string {
	return P(txt, CYAN, MAGENTA.Pointer(), UNDERLINE)
}

// fg: CYAN(is_light: false) bg: CYAN style: UNDERLINE
func PCyanUnderline(txt string) string {
	return P(txt, CYAN, nil, UNDERLINE)
}

// fg: CYAN(is_light: false) bg: WHITE style: UNDERLINE
func PCyanBgWhiteUnderline(txt string) string {
	return P(txt, CYAN, WHITE.Pointer(), UNDERLINE)
}

// fg: WHITE(is_light: false) bg: BLACK style: UNDERLINE
func PWhiteBgBlackUnderline(txt string) string {
	return P(txt, WHITE, BLACK.Pointer(), UNDERLINE)
}

// fg: WHITE(is_light: false) bg: RED style: UNDERLINE
func PWhiteBgRedUnderline(txt string) string {
	return P(txt, WHITE, RED.Pointer(), UNDERLINE)
}

// fg: WHITE(is_light: false) bg: GREEN style: UNDERLINE
func PWhiteBgGreenUnderline(txt string) string {
	return P(txt, WHITE, GREEN.Pointer(), UNDERLINE)
}

// fg: WHITE(is_light: false) bg: YELLOW style: UNDERLINE
func PWhiteBgYellowUnderline(txt string) string {
	return P(txt, WHITE, YELLOW.Pointer(), UNDERLINE)
}

// fg: WHITE(is_light: false) bg: BLUE style: UNDERLINE
func PWhiteBgBlueUnderline(txt string) string {
	return P(txt, WHITE, BLUE.Pointer(), UNDERLINE)
}

// fg: WHITE(is_light: false) bg: MAGENTA style: UNDERLINE
func PWhiteBgMagentaUnderline(txt string) string {
	return P(txt, WHITE, MAGENTA.Pointer(), UNDERLINE)
}

// fg: WHITE(is_light: false) bg: CYAN style: UNDERLINE
func PWhiteBgCyanUnderline(txt string) string {
	return P(txt, WHITE, CYAN.Pointer(), UNDERLINE)
}

// fg: WHITE(is_light: false) bg: WHITE style: UNDERLINE
func PWhiteUnderline(txt string) string {
	return P(txt, WHITE, nil, UNDERLINE)
}

// fg: BLACK(is_light: false) bg: BLACK style: BLINK
func PBlackBlink(txt string) string {
	return P(txt, BLACK, nil, BLINK)
}

// fg: BLACK(is_light: false) bg: RED style: BLINK
func PBlackBgRedBlink(txt string) string {
	return P(txt, BLACK, RED.Pointer(), BLINK)
}

// fg: BLACK(is_light: false) bg: GREEN style: BLINK
func PBlackBgGreenBlink(txt string) string {
	return P(txt, BLACK, GREEN.Pointer(), BLINK)
}

// fg: BLACK(is_light: false) bg: YELLOW style: BLINK
func PBlackBgYellowBlink(txt string) string {
	return P(txt, BLACK, YELLOW.Pointer(), BLINK)
}

// fg: BLACK(is_light: false) bg: BLUE style: BLINK
func PBlackBgBlueBlink(txt string) string {
	return P(txt, BLACK, BLUE.Pointer(), BLINK)
}

// fg: BLACK(is_light: false) bg: MAGENTA style: BLINK
func PBlackBgMagentaBlink(txt string) string {
	return P(txt, BLACK, MAGENTA.Pointer(), BLINK)
}

// fg: BLACK(is_light: false) bg: CYAN style: BLINK
func PBlackBgCyanBlink(txt string) string {
	return P(txt, BLACK, CYAN.Pointer(), BLINK)
}

// fg: BLACK(is_light: false) bg: WHITE style: BLINK
func PBlackBgWhiteBlink(txt string) string {
	return P(txt, BLACK, WHITE.Pointer(), BLINK)
}

// fg: RED(is_light: false) bg: BLACK style: BLINK
func PRedBgBlackBlink(txt string) string {
	return P(txt, RED, BLACK.Pointer(), BLINK)
}

// fg: RED(is_light: false) bg: RED style: BLINK
func PRedBlink(txt string) string {
	return P(txt, RED, nil, BLINK)
}

// fg: RED(is_light: false) bg: GREEN style: BLINK
func PRedBgGreenBlink(txt string) string {
	return P(txt, RED, GREEN.Pointer(), BLINK)
}

// fg: RED(is_light: false) bg: YELLOW style: BLINK
func PRedBgYellowBlink(txt string) string {
	return P(txt, RED, YELLOW.Pointer(), BLINK)
}

// fg: RED(is_light: false) bg: BLUE style: BLINK
func PRedBgBlueBlink(txt string) string {
	return P(txt, RED, BLUE.Pointer(), BLINK)
}

// fg: RED(is_light: false) bg: MAGENTA style: BLINK
func PRedBgMagentaBlink(txt string) string {
	return P(txt, RED, MAGENTA.Pointer(), BLINK)
}

// fg: RED(is_light: false) bg: CYAN style: BLINK
func PRedBgCyanBlink(txt string) string {
	return P(txt, RED, CYAN.Pointer(), BLINK)
}

// fg: RED(is_light: false) bg: WHITE style: BLINK
func PRedBgWhiteBlink(txt string) string {
	return P(txt, RED, WHITE.Pointer(), BLINK)
}

// fg: GREEN(is_light: false) bg: BLACK style: BLINK
func PGreenBgBlackBlink(txt string) string {
	return P(txt, GREEN, BLACK.Pointer(), BLINK)
}

// fg: GREEN(is_light: false) bg: RED style: BLINK
func PGreenBgRedBlink(txt string) string {
	return P(txt, GREEN, RED.Pointer(), BLINK)
}

// fg: GREEN(is_light: false) bg: GREEN style: BLINK
func PGreenBlink(txt string) string {
	return P(txt, GREEN, nil, BLINK)
}

// fg: GREEN(is_light: false) bg: YELLOW style: BLINK
func PGreenBgYellowBlink(txt string) string {
	return P(txt, GREEN, YELLOW.Pointer(), BLINK)
}

// fg: GREEN(is_light: false) bg: BLUE style: BLINK
func PGreenBgBlueBlink(txt string) string {
	return P(txt, GREEN, BLUE.Pointer(), BLINK)
}

// fg: GREEN(is_light: false) bg: MAGENTA style: BLINK
func PGreenBgMagentaBlink(txt string) string {
	return P(txt, GREEN, MAGENTA.Pointer(), BLINK)
}

// fg: GREEN(is_light: false) bg: CYAN style: BLINK
func PGreenBgCyanBlink(txt string) string {
	return P(txt, GREEN, CYAN.Pointer(), BLINK)
}

// fg: GREEN(is_light: false) bg: WHITE style: BLINK
func PGreenBgWhiteBlink(txt string) string {
	return P(txt, GREEN, WHITE.Pointer(), BLINK)
}

// fg: YELLOW(is_light: false) bg: BLACK style: BLINK
func PYellowBgBlackBlink(txt string) string {
	return P(txt, YELLOW, BLACK.Pointer(), BLINK)
}

// fg: YELLOW(is_light: false) bg: RED style: BLINK
func PYellowBgRedBlink(txt string) string {
	return P(txt, YELLOW, RED.Pointer(), BLINK)
}

// fg: YELLOW(is_light: false) bg: GREEN style: BLINK
func PYellowBgGreenBlink(txt string) string {
	return P(txt, YELLOW, GREEN.Pointer(), BLINK)
}

// fg: YELLOW(is_light: false) bg: YELLOW style: BLINK
func PYellowBlink(txt string) string {
	return P(txt, YELLOW, nil, BLINK)
}

// fg: YELLOW(is_light: false) bg: BLUE style: BLINK
func PYellowBgBlueBlink(txt string) string {
	return P(txt, YELLOW, BLUE.Pointer(), BLINK)
}

// fg: YELLOW(is_light: false) bg: MAGENTA style: BLINK
func PYellowBgMagentaBlink(txt string) string {
	return P(txt, YELLOW, MAGENTA.Pointer(), BLINK)
}

// fg: YELLOW(is_light: false) bg: CYAN style: BLINK
func PYellowBgCyanBlink(txt string) string {
	return P(txt, YELLOW, CYAN.Pointer(), BLINK)
}

// fg: YELLOW(is_light: false) bg: WHITE style: BLINK
func PYellowBgWhiteBlink(txt string) string {
	return P(txt, YELLOW, WHITE.Pointer(), BLINK)
}

// fg: BLUE(is_light: false) bg: BLACK style: BLINK
func PBlueBgBlackBlink(txt string) string {
	return P(txt, BLUE, BLACK.Pointer(), BLINK)
}

// fg: BLUE(is_light: false) bg: RED style: BLINK
func PBlueBgRedBlink(txt string) string {
	return P(txt, BLUE, RED.Pointer(), BLINK)
}

// fg: BLUE(is_light: false) bg: GREEN style: BLINK
func PBlueBgGreenBlink(txt string) string {
	return P(txt, BLUE, GREEN.Pointer(), BLINK)
}

// fg: BLUE(is_light: false) bg: YELLOW style: BLINK
func PBlueBgYellowBlink(txt string) string {
	return P(txt, BLUE, YELLOW.Pointer(), BLINK)
}

// fg: BLUE(is_light: false) bg: BLUE style: BLINK
func PBlueBlink(txt string) string {
	return P(txt, BLUE, nil, BLINK)
}

// fg: BLUE(is_light: false) bg: MAGENTA style: BLINK
func PBlueBgMagentaBlink(txt string) string {
	return P(txt, BLUE, MAGENTA.Pointer(), BLINK)
}

// fg: BLUE(is_light: false) bg: CYAN style: BLINK
func PBlueBgCyanBlink(txt string) string {
	return P(txt, BLUE, CYAN.Pointer(), BLINK)
}

// fg: BLUE(is_light: false) bg: WHITE style: BLINK
func PBlueBgWhiteBlink(txt string) string {
	return P(txt, BLUE, WHITE.Pointer(), BLINK)
}

// fg: MAGENTA(is_light: false) bg: BLACK style: BLINK
func PMagentaBgBlackBlink(txt string) string {
	return P(txt, MAGENTA, BLACK.Pointer(), BLINK)
}

// fg: MAGENTA(is_light: false) bg: RED style: BLINK
func PMagentaBgRedBlink(txt string) string {
	return P(txt, MAGENTA, RED.Pointer(), BLINK)
}

// fg: MAGENTA(is_light: false) bg: GREEN style: BLINK
func PMagentaBgGreenBlink(txt string) string {
	return P(txt, MAGENTA, GREEN.Pointer(), BLINK)
}

// fg: MAGENTA(is_light: false) bg: YELLOW style: BLINK
func PMagentaBgYellowBlink(txt string) string {
	return P(txt, MAGENTA, YELLOW.Pointer(), BLINK)
}

// fg: MAGENTA(is_light: false) bg: BLUE style: BLINK
func PMagentaBgBlueBlink(txt string) string {
	return P(txt, MAGENTA, BLUE.Pointer(), BLINK)
}

// fg: MAGENTA(is_light: false) bg: MAGENTA style: BLINK
func PMagentaBlink(txt string) string {
	return P(txt, MAGENTA, nil, BLINK)
}

// fg: MAGENTA(is_light: false) bg: CYAN style: BLINK
func PMagentaBgCyanBlink(txt string) string {
	return P(txt, MAGENTA, CYAN.Pointer(), BLINK)
}

// fg: MAGENTA(is_light: false) bg: WHITE style: BLINK
func PMagentaBgWhiteBlink(txt string) string {
	return P(txt, MAGENTA, WHITE.Pointer(), BLINK)
}

// fg: CYAN(is_light: false) bg: BLACK style: BLINK
func PCyanBgBlackBlink(txt string) string {
	return P(txt, CYAN, BLACK.Pointer(), BLINK)
}

// fg: CYAN(is_light: false) bg: RED style: BLINK
func PCyanBgRedBlink(txt string) string {
	return P(txt, CYAN, RED.Pointer(), BLINK)
}

// fg: CYAN(is_light: false) bg: GREEN style: BLINK
func PCyanBgGreenBlink(txt string) string {
	return P(txt, CYAN, GREEN.Pointer(), BLINK)
}

// fg: CYAN(is_light: false) bg: YELLOW style: BLINK
func PCyanBgYellowBlink(txt string) string {
	return P(txt, CYAN, YELLOW.Pointer(), BLINK)
}

// fg: CYAN(is_light: false) bg: BLUE style: BLINK
func PCyanBgBlueBlink(txt string) string {
	return P(txt, CYAN, BLUE.Pointer(), BLINK)
}

// fg: CYAN(is_light: false) bg: MAGENTA style: BLINK
func PCyanBgMagentaBlink(txt string) string {
	return P(txt, CYAN, MAGENTA.Pointer(), BLINK)
}

// fg: CYAN(is_light: false) bg: CYAN style: BLINK
func PCyanBlink(txt string) string {
	return P(txt, CYAN, nil, BLINK)
}

// fg: CYAN(is_light: false) bg: WHITE style: BLINK
func PCyanBgWhiteBlink(txt string) string {
	return P(txt, CYAN, WHITE.Pointer(), BLINK)
}

// fg: WHITE(is_light: false) bg: BLACK style: BLINK
func PWhiteBgBlackBlink(txt string) string {
	return P(txt, WHITE, BLACK.Pointer(), BLINK)
}

// fg: WHITE(is_light: false) bg: RED style: BLINK
func PWhiteBgRedBlink(txt string) string {
	return P(txt, WHITE, RED.Pointer(), BLINK)
}

// fg: WHITE(is_light: false) bg: GREEN style: BLINK
func PWhiteBgGreenBlink(txt string) string {
	return P(txt, WHITE, GREEN.Pointer(), BLINK)
}

// fg: WHITE(is_light: false) bg: YELLOW style: BLINK
func PWhiteBgYellowBlink(txt string) string {
	return P(txt, WHITE, YELLOW.Pointer(), BLINK)
}

// fg: WHITE(is_light: false) bg: BLUE style: BLINK
func PWhiteBgBlueBlink(txt string) string {
	return P(txt, WHITE, BLUE.Pointer(), BLINK)
}

// fg: WHITE(is_light: false) bg: MAGENTA style: BLINK
func PWhiteBgMagentaBlink(txt string) string {
	return P(txt, WHITE, MAGENTA.Pointer(), BLINK)
}

// fg: WHITE(is_light: false) bg: CYAN style: BLINK
func PWhiteBgCyanBlink(txt string) string {
	return P(txt, WHITE, CYAN.Pointer(), BLINK)
}

// fg: WHITE(is_light: false) bg: WHITE style: BLINK
func PWhiteBlink(txt string) string {
	return P(txt, WHITE, nil, BLINK)
}

// fg: BLACK(is_light: true) bg: BLACK style: nil
func PLBlack(txt string) string {
	return P(txt, BLACK.L(), nil)
}

// fg: BLACK(is_light: true) bg: RED style: nil
func PLBlackBgRed(txt string) string {
	return P(txt, BLACK.L(), RED.Pointer())
}

// fg: BLACK(is_light: true) bg: GREEN style: nil
func PLBlackBgGreen(txt string) string {
	return P(txt, BLACK.L(), GREEN.Pointer())
}

// fg: BLACK(is_light: true) bg: YELLOW style: nil
func PLBlackBgYellow(txt string) string {
	return P(txt, BLACK.L(), YELLOW.Pointer())
}

// fg: BLACK(is_light: true) bg: BLUE style: nil
func PLBlackBgBlue(txt string) string {
	return P(txt, BLACK.L(), BLUE.Pointer())
}

// fg: BLACK(is_light: true) bg: MAGENTA style: nil
func PLBlackBgMagenta(txt string) string {
	return P(txt, BLACK.L(), MAGENTA.Pointer())
}

// fg: BLACK(is_light: true) bg: CYAN style: nil
func PLBlackBgCyan(txt string) string {
	return P(txt, BLACK.L(), CYAN.Pointer())
}

// fg: BLACK(is_light: true) bg: WHITE style: nil
func PLBlackBgWhite(txt string) string {
	return P(txt, BLACK.L(), WHITE.Pointer())
}

// fg: RED(is_light: true) bg: BLACK style: nil
func PLRedBgBlack(txt string) string {
	return P(txt, RED.L(), BLACK.Pointer())
}

// fg: RED(is_light: true) bg: RED style: nil
func PLRed(txt string) string {
	return P(txt, RED.L(), nil)
}

// fg: RED(is_light: true) bg: GREEN style: nil
func PLRedBgGreen(txt string) string {
	return P(txt, RED.L(), GREEN.Pointer())
}

// fg: RED(is_light: true) bg: YELLOW style: nil
func PLRedBgYellow(txt string) string {
	return P(txt, RED.L(), YELLOW.Pointer())
}

// fg: RED(is_light: true) bg: BLUE style: nil
func PLRedBgBlue(txt string) string {
	return P(txt, RED.L(), BLUE.Pointer())
}

// fg: RED(is_light: true) bg: MAGENTA style: nil
func PLRedBgMagenta(txt string) string {
	return P(txt, RED.L(), MAGENTA.Pointer())
}

// fg: RED(is_light: true) bg: CYAN style: nil
func PLRedBgCyan(txt string) string {
	return P(txt, RED.L(), CYAN.Pointer())
}

// fg: RED(is_light: true) bg: WHITE style: nil
func PLRedBgWhite(txt string) string {
	return P(txt, RED.L(), WHITE.Pointer())
}

// fg: GREEN(is_light: true) bg: BLACK style: nil
func PLGreenBgBlack(txt string) string {
	return P(txt, GREEN.L(), BLACK.Pointer())
}

// fg: GREEN(is_light: true) bg: RED style: nil
func PLGreenBgRed(txt string) string {
	return P(txt, GREEN.L(), RED.Pointer())
}

// fg: GREEN(is_light: true) bg: GREEN style: nil
func PLGreen(txt string) string {
	return P(txt, GREEN.L(), nil)
}

// fg: GREEN(is_light: true) bg: YELLOW style: nil
func PLGreenBgYellow(txt string) string {
	return P(txt, GREEN.L(), YELLOW.Pointer())
}

// fg: GREEN(is_light: true) bg: BLUE style: nil
func PLGreenBgBlue(txt string) string {
	return P(txt, GREEN.L(), BLUE.Pointer())
}

// fg: GREEN(is_light: true) bg: MAGENTA style: nil
func PLGreenBgMagenta(txt string) string {
	return P(txt, GREEN.L(), MAGENTA.Pointer())
}

// fg: GREEN(is_light: true) bg: CYAN style: nil
func PLGreenBgCyan(txt string) string {
	return P(txt, GREEN.L(), CYAN.Pointer())
}

// fg: GREEN(is_light: true) bg: WHITE style: nil
func PLGreenBgWhite(txt string) string {
	return P(txt, GREEN.L(), WHITE.Pointer())
}

// fg: YELLOW(is_light: true) bg: BLACK style: nil
func PLYellowBgBlack(txt string) string {
	return P(txt, YELLOW.L(), BLACK.Pointer())
}

// fg: YELLOW(is_light: true) bg: RED style: nil
func PLYellowBgRed(txt string) string {
	return P(txt, YELLOW.L(), RED.Pointer())
}

// fg: YELLOW(is_light: true) bg: GREEN style: nil
func PLYellowBgGreen(txt string) string {
	return P(txt, YELLOW.L(), GREEN.Pointer())
}

// fg: YELLOW(is_light: true) bg: YELLOW style: nil
func PLYellow(txt string) string {
	return P(txt, YELLOW.L(), nil)
}

// fg: YELLOW(is_light: true) bg: BLUE style: nil
func PLYellowBgBlue(txt string) string {
	return P(txt, YELLOW.L(), BLUE.Pointer())
}

// fg: YELLOW(is_light: true) bg: MAGENTA style: nil
func PLYellowBgMagenta(txt string) string {
	return P(txt, YELLOW.L(), MAGENTA.Pointer())
}

// fg: YELLOW(is_light: true) bg: CYAN style: nil
func PLYellowBgCyan(txt string) string {
	return P(txt, YELLOW.L(), CYAN.Pointer())
}

// fg: YELLOW(is_light: true) bg: WHITE style: nil
func PLYellowBgWhite(txt string) string {
	return P(txt, YELLOW.L(), WHITE.Pointer())
}

// fg: BLUE(is_light: true) bg: BLACK style: nil
func PLBlueBgBlack(txt string) string {
	return P(txt, BLUE.L(), BLACK.Pointer())
}

// fg: BLUE(is_light: true) bg: RED style: nil
func PLBlueBgRed(txt string) string {
	return P(txt, BLUE.L(), RED.Pointer())
}

// fg: BLUE(is_light: true) bg: GREEN style: nil
func PLBlueBgGreen(txt string) string {
	return P(txt, BLUE.L(), GREEN.Pointer())
}

// fg: BLUE(is_light: true) bg: YELLOW style: nil
func PLBlueBgYellow(txt string) string {
	return P(txt, BLUE.L(), YELLOW.Pointer())
}

// fg: BLUE(is_light: true) bg: BLUE style: nil
func PLBlue(txt string) string {
	return P(txt, BLUE.L(), nil)
}

// fg: BLUE(is_light: true) bg: MAGENTA style: nil
func PLBlueBgMagenta(txt string) string {
	return P(txt, BLUE.L(), MAGENTA.Pointer())
}

// fg: BLUE(is_light: true) bg: CYAN style: nil
func PLBlueBgCyan(txt string) string {
	return P(txt, BLUE.L(), CYAN.Pointer())
}

// fg: BLUE(is_light: true) bg: WHITE style: nil
func PLBlueBgWhite(txt string) string {
	return P(txt, BLUE.L(), WHITE.Pointer())
}

// fg: MAGENTA(is_light: true) bg: BLACK style: nil
func PLMagentaBgBlack(txt string) string {
	return P(txt, MAGENTA.L(), BLACK.Pointer())
}

// fg: MAGENTA(is_light: true) bg: RED style: nil
func PLMagentaBgRed(txt string) string {
	return P(txt, MAGENTA.L(), RED.Pointer())
}

// fg: MAGENTA(is_light: true) bg: GREEN style: nil
func PLMagentaBgGreen(txt string) string {
	return P(txt, MAGENTA.L(), GREEN.Pointer())
}

// fg: MAGENTA(is_light: true) bg: YELLOW style: nil
func PLMagentaBgYellow(txt string) string {
	return P(txt, MAGENTA.L(), YELLOW.Pointer())
}

// fg: MAGENTA(is_light: true) bg: BLUE style: nil
func PLMagentaBgBlue(txt string) string {
	return P(txt, MAGENTA.L(), BLUE.Pointer())
}

// fg: MAGENTA(is_light: true) bg: MAGENTA style: nil
func PLMagenta(txt string) string {
	return P(txt, MAGENTA.L(), nil)
}

// fg: MAGENTA(is_light: true) bg: CYAN style: nil
func PLMagentaBgCyan(txt string) string {
	return P(txt, MAGENTA.L(), CYAN.Pointer())
}

// fg: MAGENTA(is_light: true) bg: WHITE style: nil
func PLMagentaBgWhite(txt string) string {
	return P(txt, MAGENTA.L(), WHITE.Pointer())
}

// fg: CYAN(is_light: true) bg: BLACK style: nil
func PLCyanBgBlack(txt string) string {
	return P(txt, CYAN.L(), BLACK.Pointer())
}

// fg: CYAN(is_light: true) bg: RED style: nil
func PLCyanBgRed(txt string) string {
	return P(txt, CYAN.L(), RED.Pointer())
}

// fg: CYAN(is_light: true) bg: GREEN style: nil
func PLCyanBgGreen(txt string) string {
	return P(txt, CYAN.L(), GREEN.Pointer())
}

// fg: CYAN(is_light: true) bg: YELLOW style: nil
func PLCyanBgYellow(txt string) string {
	return P(txt, CYAN.L(), YELLOW.Pointer())
}

// fg: CYAN(is_light: true) bg: BLUE style: nil
func PLCyanBgBlue(txt string) string {
	return P(txt, CYAN.L(), BLUE.Pointer())
}

// fg: CYAN(is_light: true) bg: MAGENTA style: nil
func PLCyanBgMagenta(txt string) string {
	return P(txt, CYAN.L(), MAGENTA.Pointer())
}

// fg: CYAN(is_light: true) bg: CYAN style: nil
func PLCyan(txt string) string {
	return P(txt, CYAN.L(), nil)
}

// fg: CYAN(is_light: true) bg: WHITE style: nil
func PLCyanBgWhite(txt string) string {
	return P(txt, CYAN.L(), WHITE.Pointer())
}

// fg: WHITE(is_light: true) bg: BLACK style: nil
func PLWhiteBgBlack(txt string) string {
	return P(txt, WHITE.L(), BLACK.Pointer())
}

// fg: WHITE(is_light: true) bg: RED style: nil
func PLWhiteBgRed(txt string) string {
	return P(txt, WHITE.L(), RED.Pointer())
}

// fg: WHITE(is_light: true) bg: GREEN style: nil
func PLWhiteBgGreen(txt string) string {
	return P(txt, WHITE.L(), GREEN.Pointer())
}

// fg: WHITE(is_light: true) bg: YELLOW style: nil
func PLWhiteBgYellow(txt string) string {
	return P(txt, WHITE.L(), YELLOW.Pointer())
}

// fg: WHITE(is_light: true) bg: BLUE style: nil
func PLWhiteBgBlue(txt string) string {
	return P(txt, WHITE.L(), BLUE.Pointer())
}

// fg: WHITE(is_light: true) bg: MAGENTA style: nil
func PLWhiteBgMagenta(txt string) string {
	return P(txt, WHITE.L(), MAGENTA.Pointer())
}

// fg: WHITE(is_light: true) bg: CYAN style: nil
func PLWhiteBgCyan(txt string) string {
	return P(txt, WHITE.L(), CYAN.Pointer())
}

// fg: WHITE(is_light: true) bg: WHITE style: nil
func PLWhite(txt string) string {
	return P(txt, WHITE.L(), nil)
}

// fg: BLACK(is_light: true) bg: BLACK style: BOLD
func PLBlackBold(txt string) string {
	return P(txt, BLACK.L(), nil, BOLD)
}

// fg: BLACK(is_light: true) bg: RED style: BOLD
func PLBlackBgRedBold(txt string) string {
	return P(txt, BLACK.L(), RED.Pointer(), BOLD)
}

// fg: BLACK(is_light: true) bg: GREEN style: BOLD
func PLBlackBgGreenBold(txt string) string {
	return P(txt, BLACK.L(), GREEN.Pointer(), BOLD)
}

// fg: BLACK(is_light: true) bg: YELLOW style: BOLD
func PLBlackBgYellowBold(txt string) string {
	return P(txt, BLACK.L(), YELLOW.Pointer(), BOLD)
}

// fg: BLACK(is_light: true) bg: BLUE style: BOLD
func PLBlackBgBlueBold(txt string) string {
	return P(txt, BLACK.L(), BLUE.Pointer(), BOLD)
}

// fg: BLACK(is_light: true) bg: MAGENTA style: BOLD
func PLBlackBgMagentaBold(txt string) string {
	return P(txt, BLACK.L(), MAGENTA.Pointer(), BOLD)
}

// fg: BLACK(is_light: true) bg: CYAN style: BOLD
func PLBlackBgCyanBold(txt string) string {
	return P(txt, BLACK.L(), CYAN.Pointer(), BOLD)
}

// fg: BLACK(is_light: true) bg: WHITE style: BOLD
func PLBlackBgWhiteBold(txt string) string {
	return P(txt, BLACK.L(), WHITE.Pointer(), BOLD)
}

// fg: RED(is_light: true) bg: BLACK style: BOLD
func PLRedBgBlackBold(txt string) string {
	return P(txt, RED.L(), BLACK.Pointer(), BOLD)
}

// fg: RED(is_light: true) bg: RED style: BOLD
func PLRedBold(txt string) string {
	return P(txt, RED.L(), nil, BOLD)
}

// fg: RED(is_light: true) bg: GREEN style: BOLD
func PLRedBgGreenBold(txt string) string {
	return P(txt, RED.L(), GREEN.Pointer(), BOLD)
}

// fg: RED(is_light: true) bg: YELLOW style: BOLD
func PLRedBgYellowBold(txt string) string {
	return P(txt, RED.L(), YELLOW.Pointer(), BOLD)
}

// fg: RED(is_light: true) bg: BLUE style: BOLD
func PLRedBgBlueBold(txt string) string {
	return P(txt, RED.L(), BLUE.Pointer(), BOLD)
}

// fg: RED(is_light: true) bg: MAGENTA style: BOLD
func PLRedBgMagentaBold(txt string) string {
	return P(txt, RED.L(), MAGENTA.Pointer(), BOLD)
}

// fg: RED(is_light: true) bg: CYAN style: BOLD
func PLRedBgCyanBold(txt string) string {
	return P(txt, RED.L(), CYAN.Pointer(), BOLD)
}

// fg: RED(is_light: true) bg: WHITE style: BOLD
func PLRedBgWhiteBold(txt string) string {
	return P(txt, RED.L(), WHITE.Pointer(), BOLD)
}

// fg: GREEN(is_light: true) bg: BLACK style: BOLD
func PLGreenBgBlackBold(txt string) string {
	return P(txt, GREEN.L(), BLACK.Pointer(), BOLD)
}

// fg: GREEN(is_light: true) bg: RED style: BOLD
func PLGreenBgRedBold(txt string) string {
	return P(txt, GREEN.L(), RED.Pointer(), BOLD)
}

// fg: GREEN(is_light: true) bg: GREEN style: BOLD
func PLGreenBold(txt string) string {
	return P(txt, GREEN.L(), nil, BOLD)
}

// fg: GREEN(is_light: true) bg: YELLOW style: BOLD
func PLGreenBgYellowBold(txt string) string {
	return P(txt, GREEN.L(), YELLOW.Pointer(), BOLD)
}

// fg: GREEN(is_light: true) bg: BLUE style: BOLD
func PLGreenBgBlueBold(txt string) string {
	return P(txt, GREEN.L(), BLUE.Pointer(), BOLD)
}

// fg: GREEN(is_light: true) bg: MAGENTA style: BOLD
func PLGreenBgMagentaBold(txt string) string {
	return P(txt, GREEN.L(), MAGENTA.Pointer(), BOLD)
}

// fg: GREEN(is_light: true) bg: CYAN style: BOLD
func PLGreenBgCyanBold(txt string) string {
	return P(txt, GREEN.L(), CYAN.Pointer(), BOLD)
}

// fg: GREEN(is_light: true) bg: WHITE style: BOLD
func PLGreenBgWhiteBold(txt string) string {
	return P(txt, GREEN.L(), WHITE.Pointer(), BOLD)
}

// fg: YELLOW(is_light: true) bg: BLACK style: BOLD
func PLYellowBgBlackBold(txt string) string {
	return P(txt, YELLOW.L(), BLACK.Pointer(), BOLD)
}

// fg: YELLOW(is_light: true) bg: RED style: BOLD
func PLYellowBgRedBold(txt string) string {
	return P(txt, YELLOW.L(), RED.Pointer(), BOLD)
}

// fg: YELLOW(is_light: true) bg: GREEN style: BOLD
func PLYellowBgGreenBold(txt string) string {
	return P(txt, YELLOW.L(), GREEN.Pointer(), BOLD)
}

// fg: YELLOW(is_light: true) bg: YELLOW style: BOLD
func PLYellowBold(txt string) string {
	return P(txt, YELLOW.L(), nil, BOLD)
}

// fg: YELLOW(is_light: true) bg: BLUE style: BOLD
func PLYellowBgBlueBold(txt string) string {
	return P(txt, YELLOW.L(), BLUE.Pointer(), BOLD)
}

// fg: YELLOW(is_light: true) bg: MAGENTA style: BOLD
func PLYellowBgMagentaBold(txt string) string {
	return P(txt, YELLOW.L(), MAGENTA.Pointer(), BOLD)
}

// fg: YELLOW(is_light: true) bg: CYAN style: BOLD
func PLYellowBgCyanBold(txt string) string {
	return P(txt, YELLOW.L(), CYAN.Pointer(), BOLD)
}

// fg: YELLOW(is_light: true) bg: WHITE style: BOLD
func PLYellowBgWhiteBold(txt string) string {
	return P(txt, YELLOW.L(), WHITE.Pointer(), BOLD)
}

// fg: BLUE(is_light: true) bg: BLACK style: BOLD
func PLBlueBgBlackBold(txt string) string {
	return P(txt, BLUE.L(), BLACK.Pointer(), BOLD)
}

// fg: BLUE(is_light: true) bg: RED style: BOLD
func PLBlueBgRedBold(txt string) string {
	return P(txt, BLUE.L(), RED.Pointer(), BOLD)
}

// fg: BLUE(is_light: true) bg: GREEN style: BOLD
func PLBlueBgGreenBold(txt string) string {
	return P(txt, BLUE.L(), GREEN.Pointer(), BOLD)
}

// fg: BLUE(is_light: true) bg: YELLOW style: BOLD
func PLBlueBgYellowBold(txt string) string {
	return P(txt, BLUE.L(), YELLOW.Pointer(), BOLD)
}

// fg: BLUE(is_light: true) bg: BLUE style: BOLD
func PLBlueBold(txt string) string {
	return P(txt, BLUE.L(), nil, BOLD)
}

// fg: BLUE(is_light: true) bg: MAGENTA style: BOLD
func PLBlueBgMagentaBold(txt string) string {
	return P(txt, BLUE.L(), MAGENTA.Pointer(), BOLD)
}

// fg: BLUE(is_light: true) bg: CYAN style: BOLD
func PLBlueBgCyanBold(txt string) string {
	return P(txt, BLUE.L(), CYAN.Pointer(), BOLD)
}

// fg: BLUE(is_light: true) bg: WHITE style: BOLD
func PLBlueBgWhiteBold(txt string) string {
	return P(txt, BLUE.L(), WHITE.Pointer(), BOLD)
}

// fg: MAGENTA(is_light: true) bg: BLACK style: BOLD
func PLMagentaBgBlackBold(txt string) string {
	return P(txt, MAGENTA.L(), BLACK.Pointer(), BOLD)
}

// fg: MAGENTA(is_light: true) bg: RED style: BOLD
func PLMagentaBgRedBold(txt string) string {
	return P(txt, MAGENTA.L(), RED.Pointer(), BOLD)
}

// fg: MAGENTA(is_light: true) bg: GREEN style: BOLD
func PLMagentaBgGreenBold(txt string) string {
	return P(txt, MAGENTA.L(), GREEN.Pointer(), BOLD)
}

// fg: MAGENTA(is_light: true) bg: YELLOW style: BOLD
func PLMagentaBgYellowBold(txt string) string {
	return P(txt, MAGENTA.L(), YELLOW.Pointer(), BOLD)
}

// fg: MAGENTA(is_light: true) bg: BLUE style: BOLD
func PLMagentaBgBlueBold(txt string) string {
	return P(txt, MAGENTA.L(), BLUE.Pointer(), BOLD)
}

// fg: MAGENTA(is_light: true) bg: MAGENTA style: BOLD
func PLMagentaBold(txt string) string {
	return P(txt, MAGENTA.L(), nil, BOLD)
}

// fg: MAGENTA(is_light: true) bg: CYAN style: BOLD
func PLMagentaBgCyanBold(txt string) string {
	return P(txt, MAGENTA.L(), CYAN.Pointer(), BOLD)
}

// fg: MAGENTA(is_light: true) bg: WHITE style: BOLD
func PLMagentaBgWhiteBold(txt string) string {
	return P(txt, MAGENTA.L(), WHITE.Pointer(), BOLD)
}

// fg: CYAN(is_light: true) bg: BLACK style: BOLD
func PLCyanBgBlackBold(txt string) string {
	return P(txt, CYAN.L(), BLACK.Pointer(), BOLD)
}

// fg: CYAN(is_light: true) bg: RED style: BOLD
func PLCyanBgRedBold(txt string) string {
	return P(txt, CYAN.L(), RED.Pointer(), BOLD)
}

// fg: CYAN(is_light: true) bg: GREEN style: BOLD
func PLCyanBgGreenBold(txt string) string {
	return P(txt, CYAN.L(), GREEN.Pointer(), BOLD)
}

// fg: CYAN(is_light: true) bg: YELLOW style: BOLD
func PLCyanBgYellowBold(txt string) string {
	return P(txt, CYAN.L(), YELLOW.Pointer(), BOLD)
}

// fg: CYAN(is_light: true) bg: BLUE style: BOLD
func PLCyanBgBlueBold(txt string) string {
	return P(txt, CYAN.L(), BLUE.Pointer(), BOLD)
}

// fg: CYAN(is_light: true) bg: MAGENTA style: BOLD
func PLCyanBgMagentaBold(txt string) string {
	return P(txt, CYAN.L(), MAGENTA.Pointer(), BOLD)
}

// fg: CYAN(is_light: true) bg: CYAN style: BOLD
func PLCyanBold(txt string) string {
	return P(txt, CYAN.L(), nil, BOLD)
}

// fg: CYAN(is_light: true) bg: WHITE style: BOLD
func PLCyanBgWhiteBold(txt string) string {
	return P(txt, CYAN.L(), WHITE.Pointer(), BOLD)
}

// fg: WHITE(is_light: true) bg: BLACK style: BOLD
func PLWhiteBgBlackBold(txt string) string {
	return P(txt, WHITE.L(), BLACK.Pointer(), BOLD)
}

// fg: WHITE(is_light: true) bg: RED style: BOLD
func PLWhiteBgRedBold(txt string) string {
	return P(txt, WHITE.L(), RED.Pointer(), BOLD)
}

// fg: WHITE(is_light: true) bg: GREEN style: BOLD
func PLWhiteBgGreenBold(txt string) string {
	return P(txt, WHITE.L(), GREEN.Pointer(), BOLD)
}

// fg: WHITE(is_light: true) bg: YELLOW style: BOLD
func PLWhiteBgYellowBold(txt string) string {
	return P(txt, WHITE.L(), YELLOW.Pointer(), BOLD)
}

// fg: WHITE(is_light: true) bg: BLUE style: BOLD
func PLWhiteBgBlueBold(txt string) string {
	return P(txt, WHITE.L(), BLUE.Pointer(), BOLD)
}

// fg: WHITE(is_light: true) bg: MAGENTA style: BOLD
func PLWhiteBgMagentaBold(txt string) string {
	return P(txt, WHITE.L(), MAGENTA.Pointer(), BOLD)
}

// fg: WHITE(is_light: true) bg: CYAN style: BOLD
func PLWhiteBgCyanBold(txt string) string {
	return P(txt, WHITE.L(), CYAN.Pointer(), BOLD)
}

// fg: WHITE(is_light: true) bg: WHITE style: BOLD
func PLWhiteBold(txt string) string {
	return P(txt, WHITE.L(), nil, BOLD)
}

// fg: BLACK(is_light: true) bg: BLACK style: FAINT
func PLBlackFaint(txt string) string {
	return P(txt, BLACK.L(), nil, FAINT)
}

// fg: BLACK(is_light: true) bg: RED style: FAINT
func PLBlackBgRedFaint(txt string) string {
	return P(txt, BLACK.L(), RED.Pointer(), FAINT)
}

// fg: BLACK(is_light: true) bg: GREEN style: FAINT
func PLBlackBgGreenFaint(txt string) string {
	return P(txt, BLACK.L(), GREEN.Pointer(), FAINT)
}

// fg: BLACK(is_light: true) bg: YELLOW style: FAINT
func PLBlackBgYellowFaint(txt string) string {
	return P(txt, BLACK.L(), YELLOW.Pointer(), FAINT)
}

// fg: BLACK(is_light: true) bg: BLUE style: FAINT
func PLBlackBgBlueFaint(txt string) string {
	return P(txt, BLACK.L(), BLUE.Pointer(), FAINT)
}

// fg: BLACK(is_light: true) bg: MAGENTA style: FAINT
func PLBlackBgMagentaFaint(txt string) string {
	return P(txt, BLACK.L(), MAGENTA.Pointer(), FAINT)
}

// fg: BLACK(is_light: true) bg: CYAN style: FAINT
func PLBlackBgCyanFaint(txt string) string {
	return P(txt, BLACK.L(), CYAN.Pointer(), FAINT)
}

// fg: BLACK(is_light: true) bg: WHITE style: FAINT
func PLBlackBgWhiteFaint(txt string) string {
	return P(txt, BLACK.L(), WHITE.Pointer(), FAINT)
}

// fg: RED(is_light: true) bg: BLACK style: FAINT
func PLRedBgBlackFaint(txt string) string {
	return P(txt, RED.L(), BLACK.Pointer(), FAINT)
}

// fg: RED(is_light: true) bg: RED style: FAINT
func PLRedFaint(txt string) string {
	return P(txt, RED.L(), nil, FAINT)
}

// fg: RED(is_light: true) bg: GREEN style: FAINT
func PLRedBgGreenFaint(txt string) string {
	return P(txt, RED.L(), GREEN.Pointer(), FAINT)
}

// fg: RED(is_light: true) bg: YELLOW style: FAINT
func PLRedBgYellowFaint(txt string) string {
	return P(txt, RED.L(), YELLOW.Pointer(), FAINT)
}

// fg: RED(is_light: true) bg: BLUE style: FAINT
func PLRedBgBlueFaint(txt string) string {
	return P(txt, RED.L(), BLUE.Pointer(), FAINT)
}

// fg: RED(is_light: true) bg: MAGENTA style: FAINT
func PLRedBgMagentaFaint(txt string) string {
	return P(txt, RED.L(), MAGENTA.Pointer(), FAINT)
}

// fg: RED(is_light: true) bg: CYAN style: FAINT
func PLRedBgCyanFaint(txt string) string {
	return P(txt, RED.L(), CYAN.Pointer(), FAINT)
}

// fg: RED(is_light: true) bg: WHITE style: FAINT
func PLRedBgWhiteFaint(txt string) string {
	return P(txt, RED.L(), WHITE.Pointer(), FAINT)
}

// fg: GREEN(is_light: true) bg: BLACK style: FAINT
func PLGreenBgBlackFaint(txt string) string {
	return P(txt, GREEN.L(), BLACK.Pointer(), FAINT)
}

// fg: GREEN(is_light: true) bg: RED style: FAINT
func PLGreenBgRedFaint(txt string) string {
	return P(txt, GREEN.L(), RED.Pointer(), FAINT)
}

// fg: GREEN(is_light: true) bg: GREEN style: FAINT
func PLGreenFaint(txt string) string {
	return P(txt, GREEN.L(), nil, FAINT)
}

// fg: GREEN(is_light: true) bg: YELLOW style: FAINT
func PLGreenBgYellowFaint(txt string) string {
	return P(txt, GREEN.L(), YELLOW.Pointer(), FAINT)
}

// fg: GREEN(is_light: true) bg: BLUE style: FAINT
func PLGreenBgBlueFaint(txt string) string {
	return P(txt, GREEN.L(), BLUE.Pointer(), FAINT)
}

// fg: GREEN(is_light: true) bg: MAGENTA style: FAINT
func PLGreenBgMagentaFaint(txt string) string {
	return P(txt, GREEN.L(), MAGENTA.Pointer(), FAINT)
}

// fg: GREEN(is_light: true) bg: CYAN style: FAINT
func PLGreenBgCyanFaint(txt string) string {
	return P(txt, GREEN.L(), CYAN.Pointer(), FAINT)
}

// fg: GREEN(is_light: true) bg: WHITE style: FAINT
func PLGreenBgWhiteFaint(txt string) string {
	return P(txt, GREEN.L(), WHITE.Pointer(), FAINT)
}

// fg: YELLOW(is_light: true) bg: BLACK style: FAINT
func PLYellowBgBlackFaint(txt string) string {
	return P(txt, YELLOW.L(), BLACK.Pointer(), FAINT)
}

// fg: YELLOW(is_light: true) bg: RED style: FAINT
func PLYellowBgRedFaint(txt string) string {
	return P(txt, YELLOW.L(), RED.Pointer(), FAINT)
}

// fg: YELLOW(is_light: true) bg: GREEN style: FAINT
func PLYellowBgGreenFaint(txt string) string {
	return P(txt, YELLOW.L(), GREEN.Pointer(), FAINT)
}

// fg: YELLOW(is_light: true) bg: YELLOW style: FAINT
func PLYellowFaint(txt string) string {
	return P(txt, YELLOW.L(), nil, FAINT)
}

// fg: YELLOW(is_light: true) bg: BLUE style: FAINT
func PLYellowBgBlueFaint(txt string) string {
	return P(txt, YELLOW.L(), BLUE.Pointer(), FAINT)
}

// fg: YELLOW(is_light: true) bg: MAGENTA style: FAINT
func PLYellowBgMagentaFaint(txt string) string {
	return P(txt, YELLOW.L(), MAGENTA.Pointer(), FAINT)
}

// fg: YELLOW(is_light: true) bg: CYAN style: FAINT
func PLYellowBgCyanFaint(txt string) string {
	return P(txt, YELLOW.L(), CYAN.Pointer(), FAINT)
}

// fg: YELLOW(is_light: true) bg: WHITE style: FAINT
func PLYellowBgWhiteFaint(txt string) string {
	return P(txt, YELLOW.L(), WHITE.Pointer(), FAINT)
}

// fg: BLUE(is_light: true) bg: BLACK style: FAINT
func PLBlueBgBlackFaint(txt string) string {
	return P(txt, BLUE.L(), BLACK.Pointer(), FAINT)
}

// fg: BLUE(is_light: true) bg: RED style: FAINT
func PLBlueBgRedFaint(txt string) string {
	return P(txt, BLUE.L(), RED.Pointer(), FAINT)
}

// fg: BLUE(is_light: true) bg: GREEN style: FAINT
func PLBlueBgGreenFaint(txt string) string {
	return P(txt, BLUE.L(), GREEN.Pointer(), FAINT)
}

// fg: BLUE(is_light: true) bg: YELLOW style: FAINT
func PLBlueBgYellowFaint(txt string) string {
	return P(txt, BLUE.L(), YELLOW.Pointer(), FAINT)
}

// fg: BLUE(is_light: true) bg: BLUE style: FAINT
func PLBlueFaint(txt string) string {
	return P(txt, BLUE.L(), nil, FAINT)
}

// fg: BLUE(is_light: true) bg: MAGENTA style: FAINT
func PLBlueBgMagentaFaint(txt string) string {
	return P(txt, BLUE.L(), MAGENTA.Pointer(), FAINT)
}

// fg: BLUE(is_light: true) bg: CYAN style: FAINT
func PLBlueBgCyanFaint(txt string) string {
	return P(txt, BLUE.L(), CYAN.Pointer(), FAINT)
}

// fg: BLUE(is_light: true) bg: WHITE style: FAINT
func PLBlueBgWhiteFaint(txt string) string {
	return P(txt, BLUE.L(), WHITE.Pointer(), FAINT)
}

// fg: MAGENTA(is_light: true) bg: BLACK style: FAINT
func PLMagentaBgBlackFaint(txt string) string {
	return P(txt, MAGENTA.L(), BLACK.Pointer(), FAINT)
}

// fg: MAGENTA(is_light: true) bg: RED style: FAINT
func PLMagentaBgRedFaint(txt string) string {
	return P(txt, MAGENTA.L(), RED.Pointer(), FAINT)
}

// fg: MAGENTA(is_light: true) bg: GREEN style: FAINT
func PLMagentaBgGreenFaint(txt string) string {
	return P(txt, MAGENTA.L(), GREEN.Pointer(), FAINT)
}

// fg: MAGENTA(is_light: true) bg: YELLOW style: FAINT
func PLMagentaBgYellowFaint(txt string) string {
	return P(txt, MAGENTA.L(), YELLOW.Pointer(), FAINT)
}

// fg: MAGENTA(is_light: true) bg: BLUE style: FAINT
func PLMagentaBgBlueFaint(txt string) string {
	return P(txt, MAGENTA.L(), BLUE.Pointer(), FAINT)
}

// fg: MAGENTA(is_light: true) bg: MAGENTA style: FAINT
func PLMagentaFaint(txt string) string {
	return P(txt, MAGENTA.L(), nil, FAINT)
}

// fg: MAGENTA(is_light: true) bg: CYAN style: FAINT
func PLMagentaBgCyanFaint(txt string) string {
	return P(txt, MAGENTA.L(), CYAN.Pointer(), FAINT)
}

// fg: MAGENTA(is_light: true) bg: WHITE style: FAINT
func PLMagentaBgWhiteFaint(txt string) string {
	return P(txt, MAGENTA.L(), WHITE.Pointer(), FAINT)
}

// fg: CYAN(is_light: true) bg: BLACK style: FAINT
func PLCyanBgBlackFaint(txt string) string {
	return P(txt, CYAN.L(), BLACK.Pointer(), FAINT)
}

// fg: CYAN(is_light: true) bg: RED style: FAINT
func PLCyanBgRedFaint(txt string) string {
	return P(txt, CYAN.L(), RED.Pointer(), FAINT)
}

// fg: CYAN(is_light: true) bg: GREEN style: FAINT
func PLCyanBgGreenFaint(txt string) string {
	return P(txt, CYAN.L(), GREEN.Pointer(), FAINT)
}

// fg: CYAN(is_light: true) bg: YELLOW style: FAINT
func PLCyanBgYellowFaint(txt string) string {
	return P(txt, CYAN.L(), YELLOW.Pointer(), FAINT)
}

// fg: CYAN(is_light: true) bg: BLUE style: FAINT
func PLCyanBgBlueFaint(txt string) string {
	return P(txt, CYAN.L(), BLUE.Pointer(), FAINT)
}

// fg: CYAN(is_light: true) bg: MAGENTA style: FAINT
func PLCyanBgMagentaFaint(txt string) string {
	return P(txt, CYAN.L(), MAGENTA.Pointer(), FAINT)
}

// fg: CYAN(is_light: true) bg: CYAN style: FAINT
func PLCyanFaint(txt string) string {
	return P(txt, CYAN.L(), nil, FAINT)
}

// fg: CYAN(is_light: true) bg: WHITE style: FAINT
func PLCyanBgWhiteFaint(txt string) string {
	return P(txt, CYAN.L(), WHITE.Pointer(), FAINT)
}

// fg: WHITE(is_light: true) bg: BLACK style: FAINT
func PLWhiteBgBlackFaint(txt string) string {
	return P(txt, WHITE.L(), BLACK.Pointer(), FAINT)
}

// fg: WHITE(is_light: true) bg: RED style: FAINT
func PLWhiteBgRedFaint(txt string) string {
	return P(txt, WHITE.L(), RED.Pointer(), FAINT)
}

// fg: WHITE(is_light: true) bg: GREEN style: FAINT
func PLWhiteBgGreenFaint(txt string) string {
	return P(txt, WHITE.L(), GREEN.Pointer(), FAINT)
}

// fg: WHITE(is_light: true) bg: YELLOW style: FAINT
func PLWhiteBgYellowFaint(txt string) string {
	return P(txt, WHITE.L(), YELLOW.Pointer(), FAINT)
}

// fg: WHITE(is_light: true) bg: BLUE style: FAINT
func PLWhiteBgBlueFaint(txt string) string {
	return P(txt, WHITE.L(), BLUE.Pointer(), FAINT)
}

// fg: WHITE(is_light: true) bg: MAGENTA style: FAINT
func PLWhiteBgMagentaFaint(txt string) string {
	return P(txt, WHITE.L(), MAGENTA.Pointer(), FAINT)
}

// fg: WHITE(is_light: true) bg: CYAN style: FAINT
func PLWhiteBgCyanFaint(txt string) string {
	return P(txt, WHITE.L(), CYAN.Pointer(), FAINT)
}

// fg: WHITE(is_light: true) bg: WHITE style: FAINT
func PLWhiteFaint(txt string) string {
	return P(txt, WHITE.L(), nil, FAINT)
}

// fg: BLACK(is_light: true) bg: BLACK style: ITALIC
func PLBlackItalic(txt string) string {
	return P(txt, BLACK.L(), nil, ITALIC)
}

// fg: BLACK(is_light: true) bg: RED style: ITALIC
func PLBlackBgRedItalic(txt string) string {
	return P(txt, BLACK.L(), RED.Pointer(), ITALIC)
}

// fg: BLACK(is_light: true) bg: GREEN style: ITALIC
func PLBlackBgGreenItalic(txt string) string {
	return P(txt, BLACK.L(), GREEN.Pointer(), ITALIC)
}

// fg: BLACK(is_light: true) bg: YELLOW style: ITALIC
func PLBlackBgYellowItalic(txt string) string {
	return P(txt, BLACK.L(), YELLOW.Pointer(), ITALIC)
}

// fg: BLACK(is_light: true) bg: BLUE style: ITALIC
func PLBlackBgBlueItalic(txt string) string {
	return P(txt, BLACK.L(), BLUE.Pointer(), ITALIC)
}

// fg: BLACK(is_light: true) bg: MAGENTA style: ITALIC
func PLBlackBgMagentaItalic(txt string) string {
	return P(txt, BLACK.L(), MAGENTA.Pointer(), ITALIC)
}

// fg: BLACK(is_light: true) bg: CYAN style: ITALIC
func PLBlackBgCyanItalic(txt string) string {
	return P(txt, BLACK.L(), CYAN.Pointer(), ITALIC)
}

// fg: BLACK(is_light: true) bg: WHITE style: ITALIC
func PLBlackBgWhiteItalic(txt string) string {
	return P(txt, BLACK.L(), WHITE.Pointer(), ITALIC)
}

// fg: RED(is_light: true) bg: BLACK style: ITALIC
func PLRedBgBlackItalic(txt string) string {
	return P(txt, RED.L(), BLACK.Pointer(), ITALIC)
}

// fg: RED(is_light: true) bg: RED style: ITALIC
func PLRedItalic(txt string) string {
	return P(txt, RED.L(), nil, ITALIC)
}

// fg: RED(is_light: true) bg: GREEN style: ITALIC
func PLRedBgGreenItalic(txt string) string {
	return P(txt, RED.L(), GREEN.Pointer(), ITALIC)
}

// fg: RED(is_light: true) bg: YELLOW style: ITALIC
func PLRedBgYellowItalic(txt string) string {
	return P(txt, RED.L(), YELLOW.Pointer(), ITALIC)
}

// fg: RED(is_light: true) bg: BLUE style: ITALIC
func PLRedBgBlueItalic(txt string) string {
	return P(txt, RED.L(), BLUE.Pointer(), ITALIC)
}

// fg: RED(is_light: true) bg: MAGENTA style: ITALIC
func PLRedBgMagentaItalic(txt string) string {
	return P(txt, RED.L(), MAGENTA.Pointer(), ITALIC)
}

// fg: RED(is_light: true) bg: CYAN style: ITALIC
func PLRedBgCyanItalic(txt string) string {
	return P(txt, RED.L(), CYAN.Pointer(), ITALIC)
}

// fg: RED(is_light: true) bg: WHITE style: ITALIC
func PLRedBgWhiteItalic(txt string) string {
	return P(txt, RED.L(), WHITE.Pointer(), ITALIC)
}

// fg: GREEN(is_light: true) bg: BLACK style: ITALIC
func PLGreenBgBlackItalic(txt string) string {
	return P(txt, GREEN.L(), BLACK.Pointer(), ITALIC)
}

// fg: GREEN(is_light: true) bg: RED style: ITALIC
func PLGreenBgRedItalic(txt string) string {
	return P(txt, GREEN.L(), RED.Pointer(), ITALIC)
}

// fg: GREEN(is_light: true) bg: GREEN style: ITALIC
func PLGreenItalic(txt string) string {
	return P(txt, GREEN.L(), nil, ITALIC)
}

// fg: GREEN(is_light: true) bg: YELLOW style: ITALIC
func PLGreenBgYellowItalic(txt string) string {
	return P(txt, GREEN.L(), YELLOW.Pointer(), ITALIC)
}

// fg: GREEN(is_light: true) bg: BLUE style: ITALIC
func PLGreenBgBlueItalic(txt string) string {
	return P(txt, GREEN.L(), BLUE.Pointer(), ITALIC)
}

// fg: GREEN(is_light: true) bg: MAGENTA style: ITALIC
func PLGreenBgMagentaItalic(txt string) string {
	return P(txt, GREEN.L(), MAGENTA.Pointer(), ITALIC)
}

// fg: GREEN(is_light: true) bg: CYAN style: ITALIC
func PLGreenBgCyanItalic(txt string) string {
	return P(txt, GREEN.L(), CYAN.Pointer(), ITALIC)
}

// fg: GREEN(is_light: true) bg: WHITE style: ITALIC
func PLGreenBgWhiteItalic(txt string) string {
	return P(txt, GREEN.L(), WHITE.Pointer(), ITALIC)
}

// fg: YELLOW(is_light: true) bg: BLACK style: ITALIC
func PLYellowBgBlackItalic(txt string) string {
	return P(txt, YELLOW.L(), BLACK.Pointer(), ITALIC)
}

// fg: YELLOW(is_light: true) bg: RED style: ITALIC
func PLYellowBgRedItalic(txt string) string {
	return P(txt, YELLOW.L(), RED.Pointer(), ITALIC)
}

// fg: YELLOW(is_light: true) bg: GREEN style: ITALIC
func PLYellowBgGreenItalic(txt string) string {
	return P(txt, YELLOW.L(), GREEN.Pointer(), ITALIC)
}

// fg: YELLOW(is_light: true) bg: YELLOW style: ITALIC
func PLYellowItalic(txt string) string {
	return P(txt, YELLOW.L(), nil, ITALIC)
}

// fg: YELLOW(is_light: true) bg: BLUE style: ITALIC
func PLYellowBgBlueItalic(txt string) string {
	return P(txt, YELLOW.L(), BLUE.Pointer(), ITALIC)
}

// fg: YELLOW(is_light: true) bg: MAGENTA style: ITALIC
func PLYellowBgMagentaItalic(txt string) string {
	return P(txt, YELLOW.L(), MAGENTA.Pointer(), ITALIC)
}

// fg: YELLOW(is_light: true) bg: CYAN style: ITALIC
func PLYellowBgCyanItalic(txt string) string {
	return P(txt, YELLOW.L(), CYAN.Pointer(), ITALIC)
}

// fg: YELLOW(is_light: true) bg: WHITE style: ITALIC
func PLYellowBgWhiteItalic(txt string) string {
	return P(txt, YELLOW.L(), WHITE.Pointer(), ITALIC)
}

// fg: BLUE(is_light: true) bg: BLACK style: ITALIC
func PLBlueBgBlackItalic(txt string) string {
	return P(txt, BLUE.L(), BLACK.Pointer(), ITALIC)
}

// fg: BLUE(is_light: true) bg: RED style: ITALIC
func PLBlueBgRedItalic(txt string) string {
	return P(txt, BLUE.L(), RED.Pointer(), ITALIC)
}

// fg: BLUE(is_light: true) bg: GREEN style: ITALIC
func PLBlueBgGreenItalic(txt string) string {
	return P(txt, BLUE.L(), GREEN.Pointer(), ITALIC)
}

// fg: BLUE(is_light: true) bg: YELLOW style: ITALIC
func PLBlueBgYellowItalic(txt string) string {
	return P(txt, BLUE.L(), YELLOW.Pointer(), ITALIC)
}

// fg: BLUE(is_light: true) bg: BLUE style: ITALIC
func PLBlueItalic(txt string) string {
	return P(txt, BLUE.L(), nil, ITALIC)
}

// fg: BLUE(is_light: true) bg: MAGENTA style: ITALIC
func PLBlueBgMagentaItalic(txt string) string {
	return P(txt, BLUE.L(), MAGENTA.Pointer(), ITALIC)
}

// fg: BLUE(is_light: true) bg: CYAN style: ITALIC
func PLBlueBgCyanItalic(txt string) string {
	return P(txt, BLUE.L(), CYAN.Pointer(), ITALIC)
}

// fg: BLUE(is_light: true) bg: WHITE style: ITALIC
func PLBlueBgWhiteItalic(txt string) string {
	return P(txt, BLUE.L(), WHITE.Pointer(), ITALIC)
}

// fg: MAGENTA(is_light: true) bg: BLACK style: ITALIC
func PLMagentaBgBlackItalic(txt string) string {
	return P(txt, MAGENTA.L(), BLACK.Pointer(), ITALIC)
}

// fg: MAGENTA(is_light: true) bg: RED style: ITALIC
func PLMagentaBgRedItalic(txt string) string {
	return P(txt, MAGENTA.L(), RED.Pointer(), ITALIC)
}

// fg: MAGENTA(is_light: true) bg: GREEN style: ITALIC
func PLMagentaBgGreenItalic(txt string) string {
	return P(txt, MAGENTA.L(), GREEN.Pointer(), ITALIC)
}

// fg: MAGENTA(is_light: true) bg: YELLOW style: ITALIC
func PLMagentaBgYellowItalic(txt string) string {
	return P(txt, MAGENTA.L(), YELLOW.Pointer(), ITALIC)
}

// fg: MAGENTA(is_light: true) bg: BLUE style: ITALIC
func PLMagentaBgBlueItalic(txt string) string {
	return P(txt, MAGENTA.L(), BLUE.Pointer(), ITALIC)
}

// fg: MAGENTA(is_light: true) bg: MAGENTA style: ITALIC
func PLMagentaItalic(txt string) string {
	return P(txt, MAGENTA.L(), nil, ITALIC)
}

// fg: MAGENTA(is_light: true) bg: CYAN style: ITALIC
func PLMagentaBgCyanItalic(txt string) string {
	return P(txt, MAGENTA.L(), CYAN.Pointer(), ITALIC)
}

// fg: MAGENTA(is_light: true) bg: WHITE style: ITALIC
func PLMagentaBgWhiteItalic(txt string) string {
	return P(txt, MAGENTA.L(), WHITE.Pointer(), ITALIC)
}

// fg: CYAN(is_light: true) bg: BLACK style: ITALIC
func PLCyanBgBlackItalic(txt string) string {
	return P(txt, CYAN.L(), BLACK.Pointer(), ITALIC)
}

// fg: CYAN(is_light: true) bg: RED style: ITALIC
func PLCyanBgRedItalic(txt string) string {
	return P(txt, CYAN.L(), RED.Pointer(), ITALIC)
}

// fg: CYAN(is_light: true) bg: GREEN style: ITALIC
func PLCyanBgGreenItalic(txt string) string {
	return P(txt, CYAN.L(), GREEN.Pointer(), ITALIC)
}

// fg: CYAN(is_light: true) bg: YELLOW style: ITALIC
func PLCyanBgYellowItalic(txt string) string {
	return P(txt, CYAN.L(), YELLOW.Pointer(), ITALIC)
}

// fg: CYAN(is_light: true) bg: BLUE style: ITALIC
func PLCyanBgBlueItalic(txt string) string {
	return P(txt, CYAN.L(), BLUE.Pointer(), ITALIC)
}

// fg: CYAN(is_light: true) bg: MAGENTA style: ITALIC
func PLCyanBgMagentaItalic(txt string) string {
	return P(txt, CYAN.L(), MAGENTA.Pointer(), ITALIC)
}

// fg: CYAN(is_light: true) bg: CYAN style: ITALIC
func PLCyanItalic(txt string) string {
	return P(txt, CYAN.L(), nil, ITALIC)
}

// fg: CYAN(is_light: true) bg: WHITE style: ITALIC
func PLCyanBgWhiteItalic(txt string) string {
	return P(txt, CYAN.L(), WHITE.Pointer(), ITALIC)
}

// fg: WHITE(is_light: true) bg: BLACK style: ITALIC
func PLWhiteBgBlackItalic(txt string) string {
	return P(txt, WHITE.L(), BLACK.Pointer(), ITALIC)
}

// fg: WHITE(is_light: true) bg: RED style: ITALIC
func PLWhiteBgRedItalic(txt string) string {
	return P(txt, WHITE.L(), RED.Pointer(), ITALIC)
}

// fg: WHITE(is_light: true) bg: GREEN style: ITALIC
func PLWhiteBgGreenItalic(txt string) string {
	return P(txt, WHITE.L(), GREEN.Pointer(), ITALIC)
}

// fg: WHITE(is_light: true) bg: YELLOW style: ITALIC
func PLWhiteBgYellowItalic(txt string) string {
	return P(txt, WHITE.L(), YELLOW.Pointer(), ITALIC)
}

// fg: WHITE(is_light: true) bg: BLUE style: ITALIC
func PLWhiteBgBlueItalic(txt string) string {
	return P(txt, WHITE.L(), BLUE.Pointer(), ITALIC)
}

// fg: WHITE(is_light: true) bg: MAGENTA style: ITALIC
func PLWhiteBgMagentaItalic(txt string) string {
	return P(txt, WHITE.L(), MAGENTA.Pointer(), ITALIC)
}

// fg: WHITE(is_light: true) bg: CYAN style: ITALIC
func PLWhiteBgCyanItalic(txt string) string {
	return P(txt, WHITE.L(), CYAN.Pointer(), ITALIC)
}

// fg: WHITE(is_light: true) bg: WHITE style: ITALIC
func PLWhiteItalic(txt string) string {
	return P(txt, WHITE.L(), nil, ITALIC)
}

// fg: BLACK(is_light: true) bg: BLACK style: UNDERLINE
func PLBlackUnderline(txt string) string {
	return P(txt, BLACK.L(), nil, UNDERLINE)
}

// fg: BLACK(is_light: true) bg: RED style: UNDERLINE
func PLBlackBgRedUnderline(txt string) string {
	return P(txt, BLACK.L(), RED.Pointer(), UNDERLINE)
}

// fg: BLACK(is_light: true) bg: GREEN style: UNDERLINE
func PLBlackBgGreenUnderline(txt string) string {
	return P(txt, BLACK.L(), GREEN.Pointer(), UNDERLINE)
}

// fg: BLACK(is_light: true) bg: YELLOW style: UNDERLINE
func PLBlackBgYellowUnderline(txt string) string {
	return P(txt, BLACK.L(), YELLOW.Pointer(), UNDERLINE)
}

// fg: BLACK(is_light: true) bg: BLUE style: UNDERLINE
func PLBlackBgBlueUnderline(txt string) string {
	return P(txt, BLACK.L(), BLUE.Pointer(), UNDERLINE)
}

// fg: BLACK(is_light: true) bg: MAGENTA style: UNDERLINE
func PLBlackBgMagentaUnderline(txt string) string {
	return P(txt, BLACK.L(), MAGENTA.Pointer(), UNDERLINE)
}

// fg: BLACK(is_light: true) bg: CYAN style: UNDERLINE
func PLBlackBgCyanUnderline(txt string) string {
	return P(txt, BLACK.L(), CYAN.Pointer(), UNDERLINE)
}

// fg: BLACK(is_light: true) bg: WHITE style: UNDERLINE
func PLBlackBgWhiteUnderline(txt string) string {
	return P(txt, BLACK.L(), WHITE.Pointer(), UNDERLINE)
}

// fg: RED(is_light: true) bg: BLACK style: UNDERLINE
func PLRedBgBlackUnderline(txt string) string {
	return P(txt, RED.L(), BLACK.Pointer(), UNDERLINE)
}

// fg: RED(is_light: true) bg: RED style: UNDERLINE
func PLRedUnderline(txt string) string {
	return P(txt, RED.L(), nil, UNDERLINE)
}

// fg: RED(is_light: true) bg: GREEN style: UNDERLINE
func PLRedBgGreenUnderline(txt string) string {
	return P(txt, RED.L(), GREEN.Pointer(), UNDERLINE)
}

// fg: RED(is_light: true) bg: YELLOW style: UNDERLINE
func PLRedBgYellowUnderline(txt string) string {
	return P(txt, RED.L(), YELLOW.Pointer(), UNDERLINE)
}

// fg: RED(is_light: true) bg: BLUE style: UNDERLINE
func PLRedBgBlueUnderline(txt string) string {
	return P(txt, RED.L(), BLUE.Pointer(), UNDERLINE)
}

// fg: RED(is_light: true) bg: MAGENTA style: UNDERLINE
func PLRedBgMagentaUnderline(txt string) string {
	return P(txt, RED.L(), MAGENTA.Pointer(), UNDERLINE)
}

// fg: RED(is_light: true) bg: CYAN style: UNDERLINE
func PLRedBgCyanUnderline(txt string) string {
	return P(txt, RED.L(), CYAN.Pointer(), UNDERLINE)
}

// fg: RED(is_light: true) bg: WHITE style: UNDERLINE
func PLRedBgWhiteUnderline(txt string) string {
	return P(txt, RED.L(), WHITE.Pointer(), UNDERLINE)
}

// fg: GREEN(is_light: true) bg: BLACK style: UNDERLINE
func PLGreenBgBlackUnderline(txt string) string {
	return P(txt, GREEN.L(), BLACK.Pointer(), UNDERLINE)
}

// fg: GREEN(is_light: true) bg: RED style: UNDERLINE
func PLGreenBgRedUnderline(txt string) string {
	return P(txt, GREEN.L(), RED.Pointer(), UNDERLINE)
}

// fg: GREEN(is_light: true) bg: GREEN style: UNDERLINE
func PLGreenUnderline(txt string) string {
	return P(txt, GREEN.L(), nil, UNDERLINE)
}

// fg: GREEN(is_light: true) bg: YELLOW style: UNDERLINE
func PLGreenBgYellowUnderline(txt string) string {
	return P(txt, GREEN.L(), YELLOW.Pointer(), UNDERLINE)
}

// fg: GREEN(is_light: true) bg: BLUE style: UNDERLINE
func PLGreenBgBlueUnderline(txt string) string {
	return P(txt, GREEN.L(), BLUE.Pointer(), UNDERLINE)
}

// fg: GREEN(is_light: true) bg: MAGENTA style: UNDERLINE
func PLGreenBgMagentaUnderline(txt string) string {
	return P(txt, GREEN.L(), MAGENTA.Pointer(), UNDERLINE)
}

// fg: GREEN(is_light: true) bg: CYAN style: UNDERLINE
func PLGreenBgCyanUnderline(txt string) string {
	return P(txt, GREEN.L(), CYAN.Pointer(), UNDERLINE)
}

// fg: GREEN(is_light: true) bg: WHITE style: UNDERLINE
func PLGreenBgWhiteUnderline(txt string) string {
	return P(txt, GREEN.L(), WHITE.Pointer(), UNDERLINE)
}

// fg: YELLOW(is_light: true) bg: BLACK style: UNDERLINE
func PLYellowBgBlackUnderline(txt string) string {
	return P(txt, YELLOW.L(), BLACK.Pointer(), UNDERLINE)
}

// fg: YELLOW(is_light: true) bg: RED style: UNDERLINE
func PLYellowBgRedUnderline(txt string) string {
	return P(txt, YELLOW.L(), RED.Pointer(), UNDERLINE)
}

// fg: YELLOW(is_light: true) bg: GREEN style: UNDERLINE
func PLYellowBgGreenUnderline(txt string) string {
	return P(txt, YELLOW.L(), GREEN.Pointer(), UNDERLINE)
}

// fg: YELLOW(is_light: true) bg: YELLOW style: UNDERLINE
func PLYellowUnderline(txt string) string {
	return P(txt, YELLOW.L(), nil, UNDERLINE)
}

// fg: YELLOW(is_light: true) bg: BLUE style: UNDERLINE
func PLYellowBgBlueUnderline(txt string) string {
	return P(txt, YELLOW.L(), BLUE.Pointer(), UNDERLINE)
}

// fg: YELLOW(is_light: true) bg: MAGENTA style: UNDERLINE
func PLYellowBgMagentaUnderline(txt string) string {
	return P(txt, YELLOW.L(), MAGENTA.Pointer(), UNDERLINE)
}

// fg: YELLOW(is_light: true) bg: CYAN style: UNDERLINE
func PLYellowBgCyanUnderline(txt string) string {
	return P(txt, YELLOW.L(), CYAN.Pointer(), UNDERLINE)
}

// fg: YELLOW(is_light: true) bg: WHITE style: UNDERLINE
func PLYellowBgWhiteUnderline(txt string) string {
	return P(txt, YELLOW.L(), WHITE.Pointer(), UNDERLINE)
}

// fg: BLUE(is_light: true) bg: BLACK style: UNDERLINE
func PLBlueBgBlackUnderline(txt string) string {
	return P(txt, BLUE.L(), BLACK.Pointer(), UNDERLINE)
}

// fg: BLUE(is_light: true) bg: RED style: UNDERLINE
func PLBlueBgRedUnderline(txt string) string {
	return P(txt, BLUE.L(), RED.Pointer(), UNDERLINE)
}

// fg: BLUE(is_light: true) bg: GREEN style: UNDERLINE
func PLBlueBgGreenUnderline(txt string) string {
	return P(txt, BLUE.L(), GREEN.Pointer(), UNDERLINE)
}

// fg: BLUE(is_light: true) bg: YELLOW style: UNDERLINE
func PLBlueBgYellowUnderline(txt string) string {
	return P(txt, BLUE.L(), YELLOW.Pointer(), UNDERLINE)
}

// fg: BLUE(is_light: true) bg: BLUE style: UNDERLINE
func PLBlueUnderline(txt string) string {
	return P(txt, BLUE.L(), nil, UNDERLINE)
}

// fg: BLUE(is_light: true) bg: MAGENTA style: UNDERLINE
func PLBlueBgMagentaUnderline(txt string) string {
	return P(txt, BLUE.L(), MAGENTA.Pointer(), UNDERLINE)
}

// fg: BLUE(is_light: true) bg: CYAN style: UNDERLINE
func PLBlueBgCyanUnderline(txt string) string {
	return P(txt, BLUE.L(), CYAN.Pointer(), UNDERLINE)
}

// fg: BLUE(is_light: true) bg: WHITE style: UNDERLINE
func PLBlueBgWhiteUnderline(txt string) string {
	return P(txt, BLUE.L(), WHITE.Pointer(), UNDERLINE)
}

// fg: MAGENTA(is_light: true) bg: BLACK style: UNDERLINE
func PLMagentaBgBlackUnderline(txt string) string {
	return P(txt, MAGENTA.L(), BLACK.Pointer(), UNDERLINE)
}

// fg: MAGENTA(is_light: true) bg: RED style: UNDERLINE
func PLMagentaBgRedUnderline(txt string) string {
	return P(txt, MAGENTA.L(), RED.Pointer(), UNDERLINE)
}

// fg: MAGENTA(is_light: true) bg: GREEN style: UNDERLINE
func PLMagentaBgGreenUnderline(txt string) string {
	return P(txt, MAGENTA.L(), GREEN.Pointer(), UNDERLINE)
}

// fg: MAGENTA(is_light: true) bg: YELLOW style: UNDERLINE
func PLMagentaBgYellowUnderline(txt string) string {
	return P(txt, MAGENTA.L(), YELLOW.Pointer(), UNDERLINE)
}

// fg: MAGENTA(is_light: true) bg: BLUE style: UNDERLINE
func PLMagentaBgBlueUnderline(txt string) string {
	return P(txt, MAGENTA.L(), BLUE.Pointer(), UNDERLINE)
}

// fg: MAGENTA(is_light: true) bg: MAGENTA style: UNDERLINE
func PLMagentaUnderline(txt string) string {
	return P(txt, MAGENTA.L(), nil, UNDERLINE)
}

// fg: MAGENTA(is_light: true) bg: CYAN style: UNDERLINE
func PLMagentaBgCyanUnderline(txt string) string {
	return P(txt, MAGENTA.L(), CYAN.Pointer(), UNDERLINE)
}

// fg: MAGENTA(is_light: true) bg: WHITE style: UNDERLINE
func PLMagentaBgWhiteUnderline(txt string) string {
	return P(txt, MAGENTA.L(), WHITE.Pointer(), UNDERLINE)
}

// fg: CYAN(is_light: true) bg: BLACK style: UNDERLINE
func PLCyanBgBlackUnderline(txt string) string {
	return P(txt, CYAN.L(), BLACK.Pointer(), UNDERLINE)
}

// fg: CYAN(is_light: true) bg: RED style: UNDERLINE
func PLCyanBgRedUnderline(txt string) string {
	return P(txt, CYAN.L(), RED.Pointer(), UNDERLINE)
}

// fg: CYAN(is_light: true) bg: GREEN style: UNDERLINE
func PLCyanBgGreenUnderline(txt string) string {
	return P(txt, CYAN.L(), GREEN.Pointer(), UNDERLINE)
}

// fg: CYAN(is_light: true) bg: YELLOW style: UNDERLINE
func PLCyanBgYellowUnderline(txt string) string {
	return P(txt, CYAN.L(), YELLOW.Pointer(), UNDERLINE)
}

// fg: CYAN(is_light: true) bg: BLUE style: UNDERLINE
func PLCyanBgBlueUnderline(txt string) string {
	return P(txt, CYAN.L(), BLUE.Pointer(), UNDERLINE)
}

// fg: CYAN(is_light: true) bg: MAGENTA style: UNDERLINE
func PLCyanBgMagentaUnderline(txt string) string {
	return P(txt, CYAN.L(), MAGENTA.Pointer(), UNDERLINE)
}

// fg: CYAN(is_light: true) bg: CYAN style: UNDERLINE
func PLCyanUnderline(txt string) string {
	return P(txt, CYAN.L(), nil, UNDERLINE)
}

// fg: CYAN(is_light: true) bg: WHITE style: UNDERLINE
func PLCyanBgWhiteUnderline(txt string) string {
	return P(txt, CYAN.L(), WHITE.Pointer(), UNDERLINE)
}

// fg: WHITE(is_light: true) bg: BLACK style: UNDERLINE
func PLWhiteBgBlackUnderline(txt string) string {
	return P(txt, WHITE.L(), BLACK.Pointer(), UNDERLINE)
}

// fg: WHITE(is_light: true) bg: RED style: UNDERLINE
func PLWhiteBgRedUnderline(txt string) string {
	return P(txt, WHITE.L(), RED.Pointer(), UNDERLINE)
}

// fg: WHITE(is_light: true) bg: GREEN style: UNDERLINE
func PLWhiteBgGreenUnderline(txt string) string {
	return P(txt, WHITE.L(), GREEN.Pointer(), UNDERLINE)
}

// fg: WHITE(is_light: true) bg: YELLOW style: UNDERLINE
func PLWhiteBgYellowUnderline(txt string) string {
	return P(txt, WHITE.L(), YELLOW.Pointer(), UNDERLINE)
}

// fg: WHITE(is_light: true) bg: BLUE style: UNDERLINE
func PLWhiteBgBlueUnderline(txt string) string {
	return P(txt, WHITE.L(), BLUE.Pointer(), UNDERLINE)
}

// fg: WHITE(is_light: true) bg: MAGENTA style: UNDERLINE
func PLWhiteBgMagentaUnderline(txt string) string {
	return P(txt, WHITE.L(), MAGENTA.Pointer(), UNDERLINE)
}

// fg: WHITE(is_light: true) bg: CYAN style: UNDERLINE
func PLWhiteBgCyanUnderline(txt string) string {
	return P(txt, WHITE.L(), CYAN.Pointer(), UNDERLINE)
}

// fg: WHITE(is_light: true) bg: WHITE style: UNDERLINE
func PLWhiteUnderline(txt string) string {
	return P(txt, WHITE.L(), nil, UNDERLINE)
}

// fg: BLACK(is_light: true) bg: BLACK style: BLINK
func PLBlackBlink(txt string) string {
	return P(txt, BLACK.L(), nil, BLINK)
}

// fg: BLACK(is_light: true) bg: RED style: BLINK
func PLBlackBgRedBlink(txt string) string {
	return P(txt, BLACK.L(), RED.Pointer(), BLINK)
}

// fg: BLACK(is_light: true) bg: GREEN style: BLINK
func PLBlackBgGreenBlink(txt string) string {
	return P(txt, BLACK.L(), GREEN.Pointer(), BLINK)
}

// fg: BLACK(is_light: true) bg: YELLOW style: BLINK
func PLBlackBgYellowBlink(txt string) string {
	return P(txt, BLACK.L(), YELLOW.Pointer(), BLINK)
}

// fg: BLACK(is_light: true) bg: BLUE style: BLINK
func PLBlackBgBlueBlink(txt string) string {
	return P(txt, BLACK.L(), BLUE.Pointer(), BLINK)
}

// fg: BLACK(is_light: true) bg: MAGENTA style: BLINK
func PLBlackBgMagentaBlink(txt string) string {
	return P(txt, BLACK.L(), MAGENTA.Pointer(), BLINK)
}

// fg: BLACK(is_light: true) bg: CYAN style: BLINK
func PLBlackBgCyanBlink(txt string) string {
	return P(txt, BLACK.L(), CYAN.Pointer(), BLINK)
}

// fg: BLACK(is_light: true) bg: WHITE style: BLINK
func PLBlackBgWhiteBlink(txt string) string {
	return P(txt, BLACK.L(), WHITE.Pointer(), BLINK)
}

// fg: RED(is_light: true) bg: BLACK style: BLINK
func PLRedBgBlackBlink(txt string) string {
	return P(txt, RED.L(), BLACK.Pointer(), BLINK)
}

// fg: RED(is_light: true) bg: RED style: BLINK
func PLRedBlink(txt string) string {
	return P(txt, RED.L(), nil, BLINK)
}

// fg: RED(is_light: true) bg: GREEN style: BLINK
func PLRedBgGreenBlink(txt string) string {
	return P(txt, RED.L(), GREEN.Pointer(), BLINK)
}

// fg: RED(is_light: true) bg: YELLOW style: BLINK
func PLRedBgYellowBlink(txt string) string {
	return P(txt, RED.L(), YELLOW.Pointer(), BLINK)
}

// fg: RED(is_light: true) bg: BLUE style: BLINK
func PLRedBgBlueBlink(txt string) string {
	return P(txt, RED.L(), BLUE.Pointer(), BLINK)
}

// fg: RED(is_light: true) bg: MAGENTA style: BLINK
func PLRedBgMagentaBlink(txt string) string {
	return P(txt, RED.L(), MAGENTA.Pointer(), BLINK)
}

// fg: RED(is_light: true) bg: CYAN style: BLINK
func PLRedBgCyanBlink(txt string) string {
	return P(txt, RED.L(), CYAN.Pointer(), BLINK)
}

// fg: RED(is_light: true) bg: WHITE style: BLINK
func PLRedBgWhiteBlink(txt string) string {
	return P(txt, RED.L(), WHITE.Pointer(), BLINK)
}

// fg: GREEN(is_light: true) bg: BLACK style: BLINK
func PLGreenBgBlackBlink(txt string) string {
	return P(txt, GREEN.L(), BLACK.Pointer(), BLINK)
}

// fg: GREEN(is_light: true) bg: RED style: BLINK
func PLGreenBgRedBlink(txt string) string {
	return P(txt, GREEN.L(), RED.Pointer(), BLINK)
}

// fg: GREEN(is_light: true) bg: GREEN style: BLINK
func PLGreenBlink(txt string) string {
	return P(txt, GREEN.L(), nil, BLINK)
}

// fg: GREEN(is_light: true) bg: YELLOW style: BLINK
func PLGreenBgYellowBlink(txt string) string {
	return P(txt, GREEN.L(), YELLOW.Pointer(), BLINK)
}

// fg: GREEN(is_light: true) bg: BLUE style: BLINK
func PLGreenBgBlueBlink(txt string) string {
	return P(txt, GREEN.L(), BLUE.Pointer(), BLINK)
}

// fg: GREEN(is_light: true) bg: MAGENTA style: BLINK
func PLGreenBgMagentaBlink(txt string) string {
	return P(txt, GREEN.L(), MAGENTA.Pointer(), BLINK)
}

// fg: GREEN(is_light: true) bg: CYAN style: BLINK
func PLGreenBgCyanBlink(txt string) string {
	return P(txt, GREEN.L(), CYAN.Pointer(), BLINK)
}

// fg: GREEN(is_light: true) bg: WHITE style: BLINK
func PLGreenBgWhiteBlink(txt string) string {
	return P(txt, GREEN.L(), WHITE.Pointer(), BLINK)
}

// fg: YELLOW(is_light: true) bg: BLACK style: BLINK
func PLYellowBgBlackBlink(txt string) string {
	return P(txt, YELLOW.L(), BLACK.Pointer(), BLINK)
}

// fg: YELLOW(is_light: true) bg: RED style: BLINK
func PLYellowBgRedBlink(txt string) string {
	return P(txt, YELLOW.L(), RED.Pointer(), BLINK)
}

// fg: YELLOW(is_light: true) bg: GREEN style: BLINK
func PLYellowBgGreenBlink(txt string) string {
	return P(txt, YELLOW.L(), GREEN.Pointer(), BLINK)
}

// fg: YELLOW(is_light: true) bg: YELLOW style: BLINK
func PLYellowBlink(txt string) string {
	return P(txt, YELLOW.L(), nil, BLINK)
}

// fg: YELLOW(is_light: true) bg: BLUE style: BLINK
func PLYellowBgBlueBlink(txt string) string {
	return P(txt, YELLOW.L(), BLUE.Pointer(), BLINK)
}

// fg: YELLOW(is_light: true) bg: MAGENTA style: BLINK
func PLYellowBgMagentaBlink(txt string) string {
	return P(txt, YELLOW.L(), MAGENTA.Pointer(), BLINK)
}

// fg: YELLOW(is_light: true) bg: CYAN style: BLINK
func PLYellowBgCyanBlink(txt string) string {
	return P(txt, YELLOW.L(), CYAN.Pointer(), BLINK)
}

// fg: YELLOW(is_light: true) bg: WHITE style: BLINK
func PLYellowBgWhiteBlink(txt string) string {
	return P(txt, YELLOW.L(), WHITE.Pointer(), BLINK)
}

// fg: BLUE(is_light: true) bg: BLACK style: BLINK
func PLBlueBgBlackBlink(txt string) string {
	return P(txt, BLUE.L(), BLACK.Pointer(), BLINK)
}

// fg: BLUE(is_light: true) bg: RED style: BLINK
func PLBlueBgRedBlink(txt string) string {
	return P(txt, BLUE.L(), RED.Pointer(), BLINK)
}

// fg: BLUE(is_light: true) bg: GREEN style: BLINK
func PLBlueBgGreenBlink(txt string) string {
	return P(txt, BLUE.L(), GREEN.Pointer(), BLINK)
}

// fg: BLUE(is_light: true) bg: YELLOW style: BLINK
func PLBlueBgYellowBlink(txt string) string {
	return P(txt, BLUE.L(), YELLOW.Pointer(), BLINK)
}

// fg: BLUE(is_light: true) bg: BLUE style: BLINK
func PLBlueBlink(txt string) string {
	return P(txt, BLUE.L(), nil, BLINK)
}

// fg: BLUE(is_light: true) bg: MAGENTA style: BLINK
func PLBlueBgMagentaBlink(txt string) string {
	return P(txt, BLUE.L(), MAGENTA.Pointer(), BLINK)
}

// fg: BLUE(is_light: true) bg: CYAN style: BLINK
func PLBlueBgCyanBlink(txt string) string {
	return P(txt, BLUE.L(), CYAN.Pointer(), BLINK)
}

// fg: BLUE(is_light: true) bg: WHITE style: BLINK
func PLBlueBgWhiteBlink(txt string) string {
	return P(txt, BLUE.L(), WHITE.Pointer(), BLINK)
}

// fg: MAGENTA(is_light: true) bg: BLACK style: BLINK
func PLMagentaBgBlackBlink(txt string) string {
	return P(txt, MAGENTA.L(), BLACK.Pointer(), BLINK)
}

// fg: MAGENTA(is_light: true) bg: RED style: BLINK
func PLMagentaBgRedBlink(txt string) string {
	return P(txt, MAGENTA.L(), RED.Pointer(), BLINK)
}

// fg: MAGENTA(is_light: true) bg: GREEN style: BLINK
func PLMagentaBgGreenBlink(txt string) string {
	return P(txt, MAGENTA.L(), GREEN.Pointer(), BLINK)
}

// fg: MAGENTA(is_light: true) bg: YELLOW style: BLINK
func PLMagentaBgYellowBlink(txt string) string {
	return P(txt, MAGENTA.L(), YELLOW.Pointer(), BLINK)
}

// fg: MAGENTA(is_light: true) bg: BLUE style: BLINK
func PLMagentaBgBlueBlink(txt string) string {
	return P(txt, MAGENTA.L(), BLUE.Pointer(), BLINK)
}

// fg: MAGENTA(is_light: true) bg: MAGENTA style: BLINK
func PLMagentaBlink(txt string) string {
	return P(txt, MAGENTA.L(), nil, BLINK)
}

// fg: MAGENTA(is_light: true) bg: CYAN style: BLINK
func PLMagentaBgCyanBlink(txt string) string {
	return P(txt, MAGENTA.L(), CYAN.Pointer(), BLINK)
}

// fg: MAGENTA(is_light: true) bg: WHITE style: BLINK
func PLMagentaBgWhiteBlink(txt string) string {
	return P(txt, MAGENTA.L(), WHITE.Pointer(), BLINK)
}

// fg: CYAN(is_light: true) bg: BLACK style: BLINK
func PLCyanBgBlackBlink(txt string) string {
	return P(txt, CYAN.L(), BLACK.Pointer(), BLINK)
}

// fg: CYAN(is_light: true) bg: RED style: BLINK
func PLCyanBgRedBlink(txt string) string {
	return P(txt, CYAN.L(), RED.Pointer(), BLINK)
}

// fg: CYAN(is_light: true) bg: GREEN style: BLINK
func PLCyanBgGreenBlink(txt string) string {
	return P(txt, CYAN.L(), GREEN.Pointer(), BLINK)
}

// fg: CYAN(is_light: true) bg: YELLOW style: BLINK
func PLCyanBgYellowBlink(txt string) string {
	return P(txt, CYAN.L(), YELLOW.Pointer(), BLINK)
}

// fg: CYAN(is_light: true) bg: BLUE style: BLINK
func PLCyanBgBlueBlink(txt string) string {
	return P(txt, CYAN.L(), BLUE.Pointer(), BLINK)
}

// fg: CYAN(is_light: true) bg: MAGENTA style: BLINK
func PLCyanBgMagentaBlink(txt string) string {
	return P(txt, CYAN.L(), MAGENTA.Pointer(), BLINK)
}

// fg: CYAN(is_light: true) bg: CYAN style: BLINK
func PLCyanBlink(txt string) string {
	return P(txt, CYAN.L(), nil, BLINK)
}

// fg: CYAN(is_light: true) bg: WHITE style: BLINK
func PLCyanBgWhiteBlink(txt string) string {
	return P(txt, CYAN.L(), WHITE.Pointer(), BLINK)
}

// fg: WHITE(is_light: true) bg: BLACK style: BLINK
func PLWhiteBgBlackBlink(txt string) string {
	return P(txt, WHITE.L(), BLACK.Pointer(), BLINK)
}

// fg: WHITE(is_light: true) bg: RED style: BLINK
func PLWhiteBgRedBlink(txt string) string {
	return P(txt, WHITE.L(), RED.Pointer(), BLINK)
}

// fg: WHITE(is_light: true) bg: GREEN style: BLINK
func PLWhiteBgGreenBlink(txt string) string {
	return P(txt, WHITE.L(), GREEN.Pointer(), BLINK)
}

// fg: WHITE(is_light: true) bg: YELLOW style: BLINK
func PLWhiteBgYellowBlink(txt string) string {
	return P(txt, WHITE.L(), YELLOW.Pointer(), BLINK)
}

// fg: WHITE(is_light: true) bg: BLUE style: BLINK
func PLWhiteBgBlueBlink(txt string) string {
	return P(txt, WHITE.L(), BLUE.Pointer(), BLINK)
}

// fg: WHITE(is_light: true) bg: MAGENTA style: BLINK
func PLWhiteBgMagentaBlink(txt string) string {
	return P(txt, WHITE.L(), MAGENTA.Pointer(), BLINK)
}

// fg: WHITE(is_light: true) bg: CYAN style: BLINK
func PLWhiteBgCyanBlink(txt string) string {
	return P(txt, WHITE.L(), CYAN.Pointer(), BLINK)
}

// fg: WHITE(is_light: true) bg: WHITE style: BLINK
func PLWhiteBlink(txt string) string {
	return P(txt, WHITE.L(), nil, BLINK)
}
